{
	"id": "67866e355329c10270cedaa969026912",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.8",
	"solcLongVersion": "0.6.8+commit.0bbfe453",
	"input": {
		"language": "Solidity",
		"sources": {
			".deps/npm/@aragon/govern-contract-utils/contracts/protocol/IArbitrable.sol": {
				"content": "/*\n * SPDX-License-Identifier:    MIT\n */\n\n// From https://github.com/aragon/aragon-court/blob/master/contracts/arbitration/IArbitrable.sol\n\npragma solidity ^0.6.8;\n\nimport \"./IArbitrator.sol\";\n\nabstract contract IArbitrable {\n    bytes4 internal constant ARBITRABLE_INTERFACE_ID = bytes4(0x88f3ee69);\n    uint256 internal constant ALLOW_RULING = 4;\n\n    /**\n    * @dev Emitted when an IArbitrable instance's dispute is ruled by an IArbitrator\n    * @param arbitrator IArbitrator instance ruling the dispute\n    * @param disputeId Identification number of the dispute being ruled by the arbitrator\n    * @param ruling Ruling given by the arbitrator\n    */\n    event Ruled(IArbitrator indexed arbitrator, uint256 indexed disputeId, uint256 ruling);\n\n    /**\n    * @dev Emitted when new evidence is submitted for the IArbitrable instance's dispute\n    * @param arbitrator IArbitrator submitting the evidence for\n    * @param disputeId Identification number of the dispute receiving new evidence\n    * @param submitter Address of the account submitting the evidence\n    * @param evidence Data submitted for the evidence of the dispute\n    * @param finished Whether or not the submitter has finished submitting evidence\n    */\n    event EvidenceSubmitted(IArbitrator indexed arbitrator, uint256 indexed disputeId, address indexed submitter, bytes evidence, bool finished);\n\n    /**\n    * @dev Submit evidence for a dispute\n    * @param _disputeId Id of the dispute in the Court\n    * @param _evidence Data submitted for the evidence related to the dispute\n    * @param _finished Whether or not the submitter has finished submitting evidence\n    */\n    function submitEvidence(uint256 _disputeId, bytes calldata _evidence, bool _finished) virtual external;\n\n    /**\n    * @dev Give a ruling for a certain dispute, the account calling it must have rights to rule on the contract\n    * @param _disputeId Identification number of the dispute to be ruled\n    * @param _ruling Ruling given by the arbitrator, where 0 is reserved for \"refused to make a decision\"\n    */\n    function rule(uint256 _disputeId, uint256 _ruling) virtual external;\n}"
			},
			".deps/npm/@aragon/govern-contract-utils/contracts/protocol/IArbitrator.sol": {
				"content": "/*\n * SPDX-License-Identifier:    MIT\n */\n\n// From https://github.com/aragon/aragon-court/blob/master/contracts/arbitration/IArbitrator.sol\n\npragma solidity ^0.6.8;\n\nimport \"../erc20/SafeERC20.sol\";\n\ninterface IArbitrator {\n    /**\n    * @dev Create a dispute over the Arbitrable sender with a number of possible rulings\n    * @param _possibleRulings Number of possible rulings allowed for the dispute\n    * @param _metadata Optional metadata that can be used to provide additional information on the dispute to be created\n    * @return Dispute identification number\n    */\n    function createDispute(uint256 _possibleRulings, bytes calldata _metadata) external returns (uint256);\n\n    /**\n    * @dev Close the evidence period of a dispute\n    * @param _disputeId Identification number of the dispute to close its evidence submitting period\n    */\n    function closeEvidencePeriod(uint256 _disputeId) external;\n\n    /**\n    * @dev Execute the Arbitrable associated to a dispute based on its final ruling\n    * @param _disputeId Identification number of the dispute to be executed\n    */\n    function executeRuling(uint256 _disputeId) external;\n\n    /**\n    * @dev Tell the dispute fees information to create a dispute\n    * @return recipient Address where the corresponding dispute fees must be transferred to\n    * @return feeToken ERC20 token used for the fees\n    * @return feeAmount Total amount of fees that must be allowed to the recipient\n    */\n    function getDisputeFees() external view returns (address recipient, ERC20 feeToken, uint256 feeAmount);\n\n    /**\n    * @dev Tell the subscription fees information for a subscriber to be up-to-date\n    * @param _subscriber Address of the account paying the subscription fees for\n    * @return recipient Address where the corresponding subscriptions fees must be transferred to\n    * @return feeToken ERC20 token used for the subscription fees\n    * @return feeAmount Total amount of fees that must be allowed to the recipient\n    */\n    function getSubscriptionFees(address _subscriber) external view returns (address recipient, ERC20 feeToken, uint256 feeAmount);\n}"
			},
			".deps/npm/@aragon/govern-contract-utils/contracts/erc20/SafeERC20.sol": {
				"content": "/*\n * SPDX-License-Identifier:    MIT\n */\n\n// From https://github.com/aragon/aragonOS/blob/next/contracts/common/SafeERC20.sol\n\n// Inspired by AdEx (https://github.com/AdExNetwork/adex-protocol-eth/blob/b9df617829661a7518ee10f4cb6c4108659dd6d5/contracts/libs/SafeERC20.sol)\n// and 0x (https://github.com/0xProject/0x-monorepo/blob/737d1dc54d72872e24abce5a1dbe1b66d35fa21a/contracts/protocol/contracts/protocol/AssetProxy/ERC20Proxy.sol#L143)\n\npragma solidity ^0.6.8;\n\nimport \"../address-utils/AddressUtils.sol\";\n\n/**\n * @title ERC20 interface\n * @dev see https://github.com/ethereum/EIPs/issues/20\n */\nabstract contract ERC20 {\n    function totalSupply() virtual public view returns (uint256);\n\n    function balanceOf(address _who) virtual public view returns (uint256);\n\n    function allowance(address _owner, address _spender)\n        virtual public view returns (uint256);\n\n    function transfer(address _to, uint256 _value) virtual public returns (bool);\n\n    function approve(address _spender, uint256 _value)\n        virtual public returns (bool);\n\n    function transferFrom(address _from, address _to, uint256 _value)\n        virtual public returns (bool);\n\n    event Transfer(\n        address indexed from,\n        address indexed to,\n        uint256 value\n    );\n\n    event Approval(\n        address indexed owner,\n        address indexed spender,\n        uint256 value\n    );\n}\n\nlibrary SafeERC20 {\n    using AddressUtils for address;\n\n    string private constant ERROR_TOKEN_BALANCE_REVERTED = \"SAFE_ERC_20_BALANCE_REVERTED\";\n    string private constant ERROR_TOKEN_ALLOWANCE_REVERTED = \"SAFE_ERC_20_ALLOWANCE_REVERTED\";\n\n    function invokeAndCheckSuccess(address _addr, bytes memory _calldata)\n        private\n        returns (bool ret)\n    {\n        if (!_addr.isContract()) {\n            return false;\n        }\n\n        assembly {\n            let ptr := mload(0x40)    // free memory pointer\n\n            let success := call(\n                gas(),                // forward all \n                _addr,                // address\n                0,                    // no value\n                add(_calldata, 0x20), // calldata start\n                mload(_calldata),     // calldata length\n                ptr,                  // write output over free memory\n                0x20                  // uint256 return\n            )\n\n            if gt(success, 0) {\n                // Check number of bytes returned from last function call\n                switch returndatasize()\n\n                // No bytes returned: assume success\n                case 0 {\n                    ret := 1\n                }\n\n                // 32 bytes returned: check if non-zero\n                case 0x20 {\n                    // Only return success if returned data was true\n                    // Already have output in ptr\n                    ret := eq(mload(ptr), 1)\n                }\n\n                // Not sure what was returned: don't mark as success\n                default { }\n            }\n        }\n    }\n\n    /**\n    * @dev Same as a standards-compliant ERC20.transfer() that never reverts (returns false).\n    *      Note that this makes an external call to the token.\n    */\n    function safeTransfer(ERC20 _token, address _to, uint256 _amount) internal returns (bool) {\n        bytes memory transferCallData = abi.encodeWithSelector(\n            _token.transfer.selector,\n            _to,\n            _amount\n        );\n        return invokeAndCheckSuccess(address(_token), transferCallData);\n    }\n\n    /**\n    * @dev Same as a standards-compliant ERC20.transferFrom() that never reverts (returns false).\n    *      Note that this makes an external call to the token.\n    */\n    function safeTransferFrom(ERC20 _token, address _from, address _to, uint256 _amount) internal returns (bool) {\n        bytes memory transferFromCallData = abi.encodeWithSelector(\n            _token.transferFrom.selector,\n            _from,\n            _to,\n            _amount\n        );\n        return invokeAndCheckSuccess(address(_token), transferFromCallData);\n    }\n\n    /**\n    * @dev Same as a standards-compliant ERC20.approve() that never reverts (returns false).\n    *      Note that this makes an external call to the token.\n    */\n    function safeApprove(ERC20 _token, address _spender, uint256 _amount) internal returns (bool) {\n        bytes memory approveCallData = abi.encodeWithSelector(\n            _token.approve.selector,\n            _spender,\n            _amount\n        );\n        return invokeAndCheckSuccess(address(_token), approveCallData);\n    }\n}"
			},
			".deps/npm/@aragon/govern-contract-utils/contracts/address-utils/AddressUtils.sol": {
				"content": "/*\n * SPDX-License-Identifier:    MIT\n */\n\npragma solidity ^0.6.8;\n\nlibrary AddressUtils {\n    function toPayable(address addr) internal pure returns (address payable) {\n        return address(bytes20(addr));\n    }\n\n    function toAddress(address addr) internal pure returns (address payable) {\n        return address(bytes20(addr));\n    }\n\n    function isContract(address addr) internal view returns (bool result) {\n        assembly {\n            result := not(iszero(extcodesize(addr)))\n        }\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 20000
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			".deps/npm/@aragon/govern-contract-utils/contracts/address-utils/AddressUtils.sol": {
				"AddressUtils": {
					"abi": [],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \".deps/npm/@aragon/govern-contract-utils/contracts/address-utils/AddressUtils.sol\":68:506  library AddressUtils {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \".deps/npm/@aragon/govern-contract-utils/contracts/address-utils/AddressUtils.sol\":68:506  library AddressUtils {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n        /* \"--CODEGEN--\":12:13   */\n      0x00\n        /* \"--CODEGEN--\":9:10   */\n      dup1\n        /* \"--CODEGEN--\":2:14   */\n      revert\n\n    auxdata: 0xa264697066735822122033b277e1add7abd417c3a5a7f686ef327190d46c50c36559635870bea5fad65c64736f6c63430006080033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122033b277e1add7abd417c3a5a7f686ef327190d46c50c36559635870bea5fad65c64736f6c63430006080033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLER 0xB2 PUSH24 0xE1ADD7ABD417C3A5A7F686EF327190D46C50C36559635870 0xBE 0xA5 STATICCALL 0xD6 0x5C PUSH5 0x736F6C6343 STOP MOD ADDMOD STOP CALLER ",
							"sourceMap": "68:438:0:-:0;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122033b277e1add7abd417c3a5a7f686ef327190d46c50c36559635870bea5fad65c64736f6c63430006080033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLER 0xB2 PUSH24 0xE1ADD7ABD417C3A5A7F686EF327190D46C50C36559635870 0xBE 0xA5 STATICCALL 0xD6 0x5C PUSH5 0x736F6C6343 STOP MOD ADDMOD STOP CALLER ",
							"sourceMap": "68:438:0:-:0;;;;;;12:1:-1;9;2:12"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"isContract(address)": "infinite",
								"toAddress(address)": "infinite",
								"toPayable(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 68,
									"end": 506,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 68,
									"end": 506,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"source": -1,
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE",
									"source": -1
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"source": -1,
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ",
									"source": -1
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID",
									"source": -1
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS",
									"source": -1
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"source": -1,
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8",
									"source": -1
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN",
									"source": -1
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122033b277e1add7abd417c3a5a7f686ef327190d46c50c36559635870bea5fad65c64736f6c63430006080033",
									".code": [
										{
											"begin": 68,
											"end": 506,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 68,
											"end": 506,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 68,
											"end": 506,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 68,
											"end": 506,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 68,
											"end": 506,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 68,
											"end": 506,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12,
											"end": 13,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9,
											"end": 10,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 14,
											"name": "REVERT",
											"source": -1
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.8+commit.0bbfe453\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\".deps/npm/@aragon/govern-contract-utils/contracts/address-utils/AddressUtils.sol\":\"AddressUtils\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[]},\"sources\":{\".deps/npm/@aragon/govern-contract-utils/contracts/address-utils/AddressUtils.sol\":{\"keccak256\":\"0x64afde65cee1947a6b5a53730e0c42c71d6042e461b0f39d5713c7f6771757f2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ddcb223eded092e290b9520e52dc0193fbcb081d3d63255d64830ccb124e66d9\",\"dweb:/ipfs/QmZ8iGQRmJ6Wxygm4w8nge8CuTxe5paNFG6m8t3NfQf1Ti\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			".deps/npm/@aragon/govern-contract-utils/contracts/erc20/SafeERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_who",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "see https://github.com/ethereum/EIPs/issues/20",
						"methods": {},
						"title": "ERC20 interface"
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.8+commit.0bbfe453\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_who\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"see https://github.com/ethereum/EIPs/issues/20\",\"methods\":{},\"title\":\"ERC20 interface\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\".deps/npm/@aragon/govern-contract-utils/contracts/erc20/SafeERC20.sol\":\"ERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[]},\"sources\":{\".deps/npm/@aragon/govern-contract-utils/contracts/address-utils/AddressUtils.sol\":{\"keccak256\":\"0x64afde65cee1947a6b5a53730e0c42c71d6042e461b0f39d5713c7f6771757f2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ddcb223eded092e290b9520e52dc0193fbcb081d3d63255d64830ccb124e66d9\",\"dweb:/ipfs/QmZ8iGQRmJ6Wxygm4w8nge8CuTxe5paNFG6m8t3NfQf1Ti\"]},\".deps/npm/@aragon/govern-contract-utils/contracts/erc20/SafeERC20.sol\":{\"keccak256\":\"0xf5c2b2fceb1f639cb56c6e6e098955a5583d4e240b7a021c0e3afa9de60374f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7dbaeabc7a0450ecec730a6b9a7ed6b3dc02177b48d9387e8c13c84f018025c4\",\"dweb:/ipfs/QmadPQTj8chnqf21H1MfD3s4yv5RYzcan8jQErsseeKu7D\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				},
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \".deps/npm/@aragon/govern-contract-utils/contracts/erc20/SafeERC20.sol\":1389:4571  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \".deps/npm/@aragon/govern-contract-utils/contracts/erc20/SafeERC20.sol\":1389:4571  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n        /* \"--CODEGEN--\":12:13   */\n      0x00\n        /* \"--CODEGEN--\":9:10   */\n      dup1\n        /* \"--CODEGEN--\":2:14   */\n      revert\n\n    auxdata: 0xa2646970667358221220cd93e6942b07ed8067b896cd8ea46d3d4632b95cb6dd63c14b227bb5b981138564736f6c63430006080033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cd93e6942b07ed8067b896cd8ea46d3d4632b95cb6dd63c14b227bb5b981138564736f6c63430006080033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCD SWAP4 0xE6 SWAP5 0x2B SMOD 0xED DUP1 PUSH8 0xB896CD8EA46D3D46 ORIGIN 0xB9 0x5C 0xB6 0xDD PUSH4 0xC14B227B 0xB5 0xB9 DUP2 SGT DUP6 PUSH5 0x736F6C6343 STOP MOD ADDMOD STOP CALLER ",
							"sourceMap": "1389:3182:1:-:0;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cd93e6942b07ed8067b896cd8ea46d3d4632b95cb6dd63c14b227bb5b981138564736f6c63430006080033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCD SWAP4 0xE6 SWAP5 0x2B SMOD 0xED DUP1 PUSH8 0xB896CD8EA46D3D46 ORIGIN 0xB9 0x5C 0xB6 0xDD PUSH4 0xC14B227B 0xB5 0xB9 DUP2 SGT DUP6 PUSH5 0x736F6C6343 STOP MOD ADDMOD STOP CALLER ",
							"sourceMap": "1389:3182:1:-:0;;;;;;12:1:-1;9;2:12"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"invokeAndCheckSuccess(address,bytes memory)": "infinite",
								"safeApprove(contract ERC20,address,uint256)": "infinite",
								"safeTransfer(contract ERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract ERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1389,
									"end": 4571,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1389,
									"end": 4571,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"source": -1,
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE",
									"source": -1
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"source": -1,
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ",
									"source": -1
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID",
									"source": -1
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS",
									"source": -1
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"source": -1,
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8",
									"source": -1
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN",
									"source": -1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220cd93e6942b07ed8067b896cd8ea46d3d4632b95cb6dd63c14b227bb5b981138564736f6c63430006080033",
									".code": [
										{
											"begin": 1389,
											"end": 4571,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 1389,
											"end": 4571,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 1389,
											"end": 4571,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1389,
											"end": 4571,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1389,
											"end": 4571,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1389,
											"end": 4571,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12,
											"end": 13,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9,
											"end": 10,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 14,
											"name": "REVERT",
											"source": -1
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.8+commit.0bbfe453\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\".deps/npm/@aragon/govern-contract-utils/contracts/erc20/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[]},\"sources\":{\".deps/npm/@aragon/govern-contract-utils/contracts/address-utils/AddressUtils.sol\":{\"keccak256\":\"0x64afde65cee1947a6b5a53730e0c42c71d6042e461b0f39d5713c7f6771757f2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ddcb223eded092e290b9520e52dc0193fbcb081d3d63255d64830ccb124e66d9\",\"dweb:/ipfs/QmZ8iGQRmJ6Wxygm4w8nge8CuTxe5paNFG6m8t3NfQf1Ti\"]},\".deps/npm/@aragon/govern-contract-utils/contracts/erc20/SafeERC20.sol\":{\"keccak256\":\"0xf5c2b2fceb1f639cb56c6e6e098955a5583d4e240b7a021c0e3afa9de60374f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7dbaeabc7a0450ecec730a6b9a7ed6b3dc02177b48d9387e8c13c84f018025c4\",\"dweb:/ipfs/QmadPQTj8chnqf21H1MfD3s4yv5RYzcan8jQErsseeKu7D\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			".deps/npm/@aragon/govern-contract-utils/contracts/protocol/IArbitrable.sol": {
				"IArbitrable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "contract IArbitrator",
									"name": "arbitrator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "disputeId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "submitter",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "evidence",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "finished",
									"type": "bool"
								}
							],
							"name": "EvidenceSubmitted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "contract IArbitrator",
									"name": "arbitrator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "disputeId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "ruling",
									"type": "uint256"
								}
							],
							"name": "Ruled",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_disputeId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_ruling",
									"type": "uint256"
								}
							],
							"name": "rule",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_disputeId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_evidence",
									"type": "bytes"
								},
								{
									"internalType": "bool",
									"name": "_finished",
									"type": "bool"
								}
							],
							"name": "submitEvidence",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"rule(uint256,uint256)": {
								"details": "Give a ruling for a certain dispute, the account calling it must have rights to rule on the contract",
								"params": {
									"_disputeId": "Identification number of the dispute to be ruled",
									"_ruling": "Ruling given by the arbitrator, where 0 is reserved for \"refused to make a decision\""
								}
							},
							"submitEvidence(uint256,bytes,bool)": {
								"details": "Submit evidence for a dispute",
								"params": {
									"_disputeId": "Id of the dispute in the Court",
									"_evidence": "Data submitted for the evidence related to the dispute",
									"_finished": "Whether or not the submitter has finished submitting evidence"
								}
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"rule(uint256,uint256)": "311a6c56",
							"submitEvidence(uint256,bytes,bool)": "b9e9823f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.8+commit.0bbfe453\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IArbitrator\",\"name\":\"arbitrator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"disputeId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"submitter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"evidence\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"finished\",\"type\":\"bool\"}],\"name\":\"EvidenceSubmitted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IArbitrator\",\"name\":\"arbitrator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"disputeId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ruling\",\"type\":\"uint256\"}],\"name\":\"Ruled\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_ruling\",\"type\":\"uint256\"}],\"name\":\"rule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_evidence\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"_finished\",\"type\":\"bool\"}],\"name\":\"submitEvidence\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"rule(uint256,uint256)\":{\"details\":\"Give a ruling for a certain dispute, the account calling it must have rights to rule on the contract\",\"params\":{\"_disputeId\":\"Identification number of the dispute to be ruled\",\"_ruling\":\"Ruling given by the arbitrator, where 0 is reserved for \\\"refused to make a decision\\\"\"}},\"submitEvidence(uint256,bytes,bool)\":{\"details\":\"Submit evidence for a dispute\",\"params\":{\"_disputeId\":\"Id of the dispute in the Court\",\"_evidence\":\"Data submitted for the evidence related to the dispute\",\"_finished\":\"Whether or not the submitter has finished submitting evidence\"}}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\".deps/npm/@aragon/govern-contract-utils/contracts/protocol/IArbitrable.sol\":\"IArbitrable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[]},\"sources\":{\".deps/npm/@aragon/govern-contract-utils/contracts/address-utils/AddressUtils.sol\":{\"keccak256\":\"0x64afde65cee1947a6b5a53730e0c42c71d6042e461b0f39d5713c7f6771757f2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ddcb223eded092e290b9520e52dc0193fbcb081d3d63255d64830ccb124e66d9\",\"dweb:/ipfs/QmZ8iGQRmJ6Wxygm4w8nge8CuTxe5paNFG6m8t3NfQf1Ti\"]},\".deps/npm/@aragon/govern-contract-utils/contracts/erc20/SafeERC20.sol\":{\"keccak256\":\"0xf5c2b2fceb1f639cb56c6e6e098955a5583d4e240b7a021c0e3afa9de60374f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7dbaeabc7a0450ecec730a6b9a7ed6b3dc02177b48d9387e8c13c84f018025c4\",\"dweb:/ipfs/QmadPQTj8chnqf21H1MfD3s4yv5RYzcan8jQErsseeKu7D\"]},\".deps/npm/@aragon/govern-contract-utils/contracts/protocol/IArbitrable.sol\":{\"keccak256\":\"0x90eb43471eae9e12139e544fd5bf35e0a285cb5f2b2920b06f567392d417c96b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5a12939252920717220fb267ecef6a239f1f391593c07a651a5cb764d6c1044\",\"dweb:/ipfs/QmXtqWCZnLzav5XfLr91T8oQ5tpyC5H8ToeV8SMUr8mwFB\"]},\".deps/npm/@aragon/govern-contract-utils/contracts/protocol/IArbitrator.sol\":{\"keccak256\":\"0xee70f23c164a044943b02709dd7af3a23187b97a4319a1a08dd2aa531c6573f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df4684f2ae221a462067d49037a4b1a0b30b2f381ef67b50d7cd738901619eb5\",\"dweb:/ipfs/QmYSc7ATLKTKeqqW2hxYZsr3LGMnYepqGBUKVswU9J6J3Z\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			".deps/npm/@aragon/govern-contract-utils/contracts/protocol/IArbitrator.sol": {
				"IArbitrator": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_disputeId",
									"type": "uint256"
								}
							],
							"name": "closeEvidencePeriod",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_possibleRulings",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_metadata",
									"type": "bytes"
								}
							],
							"name": "createDispute",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_disputeId",
									"type": "uint256"
								}
							],
							"name": "executeRuling",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getDisputeFees",
							"outputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "contract ERC20",
									"name": "feeToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "feeAmount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_subscriber",
									"type": "address"
								}
							],
							"name": "getSubscriptionFees",
							"outputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "contract ERC20",
									"name": "feeToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "feeAmount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"closeEvidencePeriod(uint256)": {
								"details": "Close the evidence period of a dispute",
								"params": {
									"_disputeId": "Identification number of the dispute to close its evidence submitting period"
								}
							},
							"createDispute(uint256,bytes)": {
								"details": "Create a dispute over the Arbitrable sender with a number of possible rulings",
								"params": {
									"_metadata": "Optional metadata that can be used to provide additional information on the dispute to be created",
									"_possibleRulings": "Number of possible rulings allowed for the dispute"
								},
								"returns": {
									"_0": "Dispute identification number"
								}
							},
							"executeRuling(uint256)": {
								"details": "Execute the Arbitrable associated to a dispute based on its final ruling",
								"params": {
									"_disputeId": "Identification number of the dispute to be executed"
								}
							},
							"getDisputeFees()": {
								"details": "Tell the dispute fees information to create a dispute",
								"returns": {
									"feeAmount": "Total amount of fees that must be allowed to the recipient",
									"feeToken": "ERC20 token used for the fees",
									"recipient": "Address where the corresponding dispute fees must be transferred to"
								}
							},
							"getSubscriptionFees(address)": {
								"details": "Tell the subscription fees information for a subscriber to be up-to-date",
								"params": {
									"_subscriber": "Address of the account paying the subscription fees for"
								},
								"returns": {
									"feeAmount": "Total amount of fees that must be allowed to the recipient",
									"feeToken": "ERC20 token used for the subscription fees",
									"recipient": "Address where the corresponding subscriptions fees must be transferred to"
								}
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"closeEvidencePeriod(uint256)": "7e9adccf",
							"createDispute(uint256,bytes)": "c13517e1",
							"executeRuling(uint256)": "8bb04875",
							"getDisputeFees()": "7b751b9e",
							"getSubscriptionFees(address)": "e3f2311e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.8+commit.0bbfe453\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeId\",\"type\":\"uint256\"}],\"name\":\"closeEvidencePeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_possibleRulings\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_metadata\",\"type\":\"bytes\"}],\"name\":\"createDispute\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeId\",\"type\":\"uint256\"}],\"name\":\"executeRuling\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDisputeFees\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"contract ERC20\",\"name\":\"feeToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"feeAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_subscriber\",\"type\":\"address\"}],\"name\":\"getSubscriptionFees\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"contract ERC20\",\"name\":\"feeToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"feeAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"closeEvidencePeriod(uint256)\":{\"details\":\"Close the evidence period of a dispute\",\"params\":{\"_disputeId\":\"Identification number of the dispute to close its evidence submitting period\"}},\"createDispute(uint256,bytes)\":{\"details\":\"Create a dispute over the Arbitrable sender with a number of possible rulings\",\"params\":{\"_metadata\":\"Optional metadata that can be used to provide additional information on the dispute to be created\",\"_possibleRulings\":\"Number of possible rulings allowed for the dispute\"},\"returns\":{\"_0\":\"Dispute identification number\"}},\"executeRuling(uint256)\":{\"details\":\"Execute the Arbitrable associated to a dispute based on its final ruling\",\"params\":{\"_disputeId\":\"Identification number of the dispute to be executed\"}},\"getDisputeFees()\":{\"details\":\"Tell the dispute fees information to create a dispute\",\"returns\":{\"feeAmount\":\"Total amount of fees that must be allowed to the recipient\",\"feeToken\":\"ERC20 token used for the fees\",\"recipient\":\"Address where the corresponding dispute fees must be transferred to\"}},\"getSubscriptionFees(address)\":{\"details\":\"Tell the subscription fees information for a subscriber to be up-to-date\",\"params\":{\"_subscriber\":\"Address of the account paying the subscription fees for\"},\"returns\":{\"feeAmount\":\"Total amount of fees that must be allowed to the recipient\",\"feeToken\":\"ERC20 token used for the subscription fees\",\"recipient\":\"Address where the corresponding subscriptions fees must be transferred to\"}}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\".deps/npm/@aragon/govern-contract-utils/contracts/protocol/IArbitrator.sol\":\"IArbitrator\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[]},\"sources\":{\".deps/npm/@aragon/govern-contract-utils/contracts/address-utils/AddressUtils.sol\":{\"keccak256\":\"0x64afde65cee1947a6b5a53730e0c42c71d6042e461b0f39d5713c7f6771757f2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ddcb223eded092e290b9520e52dc0193fbcb081d3d63255d64830ccb124e66d9\",\"dweb:/ipfs/QmZ8iGQRmJ6Wxygm4w8nge8CuTxe5paNFG6m8t3NfQf1Ti\"]},\".deps/npm/@aragon/govern-contract-utils/contracts/erc20/SafeERC20.sol\":{\"keccak256\":\"0xf5c2b2fceb1f639cb56c6e6e098955a5583d4e240b7a021c0e3afa9de60374f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7dbaeabc7a0450ecec730a6b9a7ed6b3dc02177b48d9387e8c13c84f018025c4\",\"dweb:/ipfs/QmadPQTj8chnqf21H1MfD3s4yv5RYzcan8jQErsseeKu7D\"]},\".deps/npm/@aragon/govern-contract-utils/contracts/protocol/IArbitrator.sol\":{\"keccak256\":\"0xee70f23c164a044943b02709dd7af3a23187b97a4319a1a08dd2aa531c6573f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df4684f2ae221a462067d49037a4b1a0b30b2f381ef67b50d7cd738901619eb5\",\"dweb:/ipfs/QmYSc7ATLKTKeqqW2hxYZsr3LGMnYepqGBUKVswU9J6J3Z\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			".deps/npm/@aragon/govern-contract-utils/contracts/address-utils/AddressUtils.sol": {
				"ast": {
					"absolutePath": ".deps/npm/@aragon/govern-contract-utils/contracts/address-utils/AddressUtils.sol",
					"exportedSymbols": {
						"AddressUtils": [
							43
						]
					},
					"id": 44,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".8"
							],
							"nodeType": "PragmaDirective",
							"src": "43:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": null,
							"fullyImplemented": true,
							"id": 43,
							"linearizedBaseContracts": [
								43
							],
							"name": "AddressUtils",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 16,
										"nodeType": "Block",
										"src": "168:46:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 12,
																	"name": "addr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "201:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 11,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "193:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes20_$",
																	"typeString": "type(bytes20)"
																},
																"typeName": {
																	"id": 10,
																	"name": "bytes20",
																	"nodeType": "ElementaryTypeName",
																	"src": "193:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 13,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "193:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes20",
																"typeString": "bytes20"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes20",
																"typeString": "bytes20"
															}
														],
														"id": 9,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "185:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 8,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "185:7:0",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 14,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "185:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 7,
												"id": 15,
												"nodeType": "Return",
												"src": "178:29:0"
											}
										]
									},
									"documentation": null,
									"id": 17,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toPayable",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"mutability": "mutable",
												"name": "addr",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 17,
												"src": "114:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "114:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "113:14:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 17,
												"src": "151:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 5,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "151:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "150:17:0"
									},
									"scope": 43,
									"src": "95:119:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 32,
										"nodeType": "Block",
										"src": "293:46:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 28,
																	"name": "addr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 19,
																	"src": "326:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 27,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "318:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes20_$",
																	"typeString": "type(bytes20)"
																},
																"typeName": {
																	"id": 26,
																	"name": "bytes20",
																	"nodeType": "ElementaryTypeName",
																	"src": "318:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 29,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "318:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes20",
																"typeString": "bytes20"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes20",
																"typeString": "bytes20"
															}
														],
														"id": 25,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "310:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 24,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "310:7:0",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 30,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "310:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 23,
												"id": 31,
												"nodeType": "Return",
												"src": "303:29:0"
											}
										]
									},
									"documentation": null,
									"id": 33,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toAddress",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "addr",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 33,
												"src": "239:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "239:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "238:14:0"
									},
									"returnParameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 33,
												"src": "276:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "276:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "275:17:0"
									},
									"scope": 43,
									"src": "220:119:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 41,
										"nodeType": "Block",
										"src": "415:89:0",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "434:64:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "448:40:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "addr",
																						"nodeType": "YulIdentifier",
																						"src": "481:4:0"
																					}
																				],
																				"functionName": {
																					"name": "extcodesize",
																					"nodeType": "YulIdentifier",
																					"src": "469:11:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "469:17:0"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "462:6:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "462:25:0"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "458:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "458:30:0"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "448:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 35,
														"isOffset": false,
														"isSlot": false,
														"src": "481:4:0",
														"valueSize": 1
													},
													{
														"declaration": 38,
														"isOffset": false,
														"isSlot": false,
														"src": "448:6:0",
														"valueSize": 1
													}
												],
												"id": 40,
												"nodeType": "InlineAssembly",
												"src": "425:73:0"
											}
										]
									},
									"documentation": null,
									"id": 42,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "addr",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 42,
												"src": "365:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "365:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "364:14:0"
									},
									"returnParameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "result",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 42,
												"src": "402:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 37,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "402:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "401:13:0"
									},
									"scope": 43,
									"src": "345:159:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 44,
							"src": "68:438:0"
						}
					],
					"src": "43:463:0"
				},
				"id": 0
			},
			".deps/npm/@aragon/govern-contract-utils/contracts/erc20/SafeERC20.sol": {
				"ast": {
					"absolutePath": ".deps/npm/@aragon/govern-contract-utils/contracts/erc20/SafeERC20.sol",
					"exportedSymbols": {
						"ERC20": [
							114
						],
						"SafeERC20": [
							242
						]
					},
					"id": 243,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 45,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".8"
							],
							"nodeType": "PragmaDirective",
							"src": "443:23:1"
						},
						{
							"absolutePath": ".deps/npm/@aragon/govern-contract-utils/contracts/address-utils/AddressUtils.sol",
							"file": "../address-utils/AddressUtils.sol",
							"id": 46,
							"nodeType": "ImportDirective",
							"scope": 243,
							"sourceUnit": 44,
							"src": "468:43:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 47,
								"nodeType": "StructuredDocumentation",
								"src": "513:88:1",
								"text": "@title ERC20 interface\n@dev see https://github.com/ethereum/EIPs/issues/20"
							},
							"fullyImplemented": false,
							"id": 114,
							"linearizedBaseContracts": [
								114
							],
							"name": "ERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"functionSelector": "18160ddd",
									"id": 52,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "652:2:1"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 52,
												"src": "684:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "683:9:1"
									},
									"scope": 114,
									"src": "632:61:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "70a08231",
									"id": 59,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "_who",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 59,
												"src": "718:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 53,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "718:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "717:14:1"
									},
									"returnParameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 59,
												"src": "761:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "761:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "760:9:1"
									},
									"scope": 114,
									"src": "699:71:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "dd62ed3e",
									"id": 68,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 68,
												"src": "795:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 60,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "795:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "_spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 68,
												"src": "811:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "811:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "794:34:1"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 68,
												"src": "866:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 65,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "866:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "865:9:1"
									},
									"scope": 114,
									"src": "776:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "a9059cbb",
									"id": 77,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 77,
												"src": "899:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 69,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "899:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 77,
												"src": "912:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 71,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "912:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "898:29:1"
									},
									"returnParameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 77,
												"src": "952:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 74,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "952:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "951:6:1"
									},
									"scope": 114,
									"src": "881:77:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "095ea7b3",
									"id": 86,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "_spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 86,
												"src": "981:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 78,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "981:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 86,
												"src": "999:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 80,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "999:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "980:34:1"
									},
									"returnParameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 84,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 86,
												"src": "1047:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 83,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1047:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1046:6:1"
									},
									"scope": 114,
									"src": "964:89:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "23b872dd",
									"id": 97,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 88,
												"mutability": "mutable",
												"name": "_from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 97,
												"src": "1081:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 87,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1081:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 97,
												"src": "1096:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 89,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1096:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 97,
												"src": "1109:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 91,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1109:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1080:44:1"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 97,
												"src": "1157:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 94,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1157:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1156:6:1"
									},
									"scope": 114,
									"src": "1059:104:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 105,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 99,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 105,
												"src": "1193:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 98,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1193:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 101,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 105,
												"src": "1223:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 103,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 105,
												"src": "1251:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 102,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1251:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1183:87:1"
									},
									"src": "1169:102:1"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 113,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 113,
												"src": "1301:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1301:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 113,
												"src": "1332:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1332:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 111,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 113,
												"src": "1365:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1365:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1291:93:1"
									},
									"src": "1277:108:1"
								}
							],
							"scope": 243,
							"src": "602:785:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": null,
							"fullyImplemented": true,
							"id": 242,
							"linearizedBaseContracts": [
								242
							],
							"name": "SafeERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 117,
									"libraryName": {
										"contractScope": null,
										"id": 115,
										"name": "AddressUtils",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 43,
										"src": "1419:12:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_AddressUtils_$43",
											"typeString": "library AddressUtils"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "1413:31:1",
									"typeName": {
										"id": 116,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1436:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"constant": true,
									"id": 120,
									"mutability": "constant",
									"name": "ERROR_TOKEN_BALANCE_REVERTED",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 242,
									"src": "1450:85:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 118,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1450:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "534146455f4552435f32305f42414c414e43455f5245564552544544",
										"id": 119,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1505:30:1",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_e0d6f1573408f815b546b777c74de94d1685d3d390fbf5b918b2e1339b2ed2e7",
											"typeString": "literal_string \"SAFE_ERC_20_BALANCE_REVERTED\""
										},
										"value": "SAFE_ERC_20_BALANCE_REVERTED"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 123,
									"mutability": "constant",
									"name": "ERROR_TOKEN_ALLOWANCE_REVERTED",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 242,
									"src": "1541:89:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 121,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1541:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "534146455f4552435f32305f414c4c4f57414e43455f5245564552544544",
										"id": 122,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1598:32:1",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_73432bcf14a5ead3ed39eed7e97b924b49d284054d4f8b41ba74ac90002bc239",
											"typeString": "literal_string \"SAFE_ERC_20_ALLOWANCE_REVERTED\""
										},
										"value": "SAFE_ERC_20_ALLOWANCE_REVERTED"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 141,
										"nodeType": "Block",
										"src": "1754:1262:1",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"id": 135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1768:19:1",
													"subExpression": {
														"argumentTypes": null,
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"argumentTypes": null,
																"id": 132,
																"name": "_addr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 125,
																"src": "1769:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 133,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "isContract",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 42,
															"src": "1769:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
																"typeString": "function (address) view returns (bool)"
															}
														},
														"id": 134,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1769:18:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 139,
												"nodeType": "IfStatement",
												"src": "1764:62:1",
												"trueBody": {
													"id": 138,
													"nodeType": "Block",
													"src": "1789:37:1",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 136,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1810:5:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 131,
															"id": 137,
															"nodeType": "Return",
															"src": "1803:12:1"
														}
													]
												}
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1845:1165:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1859:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1876:4:1",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1870:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1870:11:1"
															},
															"variables": [
																{
																	"name": "ptr",
																	"nodeType": "YulTypedName",
																	"src": "1863:3:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1921:427:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nodeType": "YulIdentifier",
																			"src": "1958:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1958:5:1"
																	},
																	{
																		"name": "_addr",
																		"nodeType": "YulIdentifier",
																		"src": "2012:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2061:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_calldata",
																				"nodeType": "YulIdentifier",
																				"src": "2115:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2126:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2111:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2111:20:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_calldata",
																				"nodeType": "YulIdentifier",
																				"src": "2173:9:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2167:5:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2167:16:1"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "2224:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2295:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nodeType": "YulIdentifier",
																	"src": "1936:4:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1936:412:1"
															},
															"variables": [
																{
																	"name": "success",
																	"nodeType": "YulTypedName",
																	"src": "1925:7:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2380:620:1",
																"statements": [
																	{
																		"cases": [
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2573:48:1",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "2595:8:1",
																							"value": {
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2602:1:1",
																								"type": "",
																								"value": "1"
																							},
																							"variableNames": [
																								{
																									"name": "ret",
																									"nodeType": "YulIdentifier",
																									"src": "2595:3:1"
																								}
																							]
																						}
																					]
																				},
																				"nodeType": "YulCase",
																				"src": "2566:55:1",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2571:1:1",
																					"type": "",
																					"value": "0"
																				}
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2705:183:1",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "2846:24:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "ptr",
																												"nodeType": "YulIdentifier",
																												"src": "2862:3:1"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "2856:5:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2856:10:1"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2868:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "eq",
																									"nodeType": "YulIdentifier",
																									"src": "2853:2:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2853:17:1"
																							},
																							"variableNames": [
																								{
																									"name": "ret",
																									"nodeType": "YulIdentifier",
																									"src": "2846:3:1"
																								}
																							]
																						}
																					]
																				},
																				"nodeType": "YulCase",
																				"src": "2695:193:1",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2700:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2983:3:1",
																					"statements": []
																				},
																				"nodeType": "YulCase",
																				"src": "2975:11:1",
																				"value": "default"
																			}
																		],
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "returndatasize",
																				"nodeType": "YulIdentifier",
																				"src": "2479:14:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2479:16:1"
																		},
																		"nodeType": "YulSwitch",
																		"src": "2472:514:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nodeType": "YulIdentifier",
																		"src": "2368:7:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2377:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2365:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2365:14:1"
															},
															"nodeType": "YulIf",
															"src": "2362:2:1"
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 125,
														"isOffset": false,
														"isSlot": false,
														"src": "2012:5:1",
														"valueSize": 1
													},
													{
														"declaration": 127,
														"isOffset": false,
														"isSlot": false,
														"src": "2115:9:1",
														"valueSize": 1
													},
													{
														"declaration": 127,
														"isOffset": false,
														"isSlot": false,
														"src": "2173:9:1",
														"valueSize": 1
													},
													{
														"declaration": 130,
														"isOffset": false,
														"isSlot": false,
														"src": "2595:3:1",
														"valueSize": 1
													},
													{
														"declaration": 130,
														"isOffset": false,
														"isSlot": false,
														"src": "2846:3:1",
														"valueSize": 1
													}
												],
												"id": 140,
												"nodeType": "InlineAssembly",
												"src": "1836:1174:1"
											}
										]
									},
									"documentation": null,
									"id": 142,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "invokeAndCheckSuccess",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "_addr",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 142,
												"src": "1668:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 124,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1668:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "_calldata",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 142,
												"src": "1683:22:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 126,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1683:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1667:39:1"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "ret",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 142,
												"src": "1740:8:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 129,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1740:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1739:10:1"
									},
									"scope": 242,
									"src": "1637:1379:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 173,
										"nodeType": "Block",
										"src": "3284:230:1",
										"statements": [
											{
												"assignments": [
													155
												],
												"declarations": [
													{
														"constant": false,
														"id": 155,
														"mutability": "mutable",
														"name": "transferCallData",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 173,
														"src": "3294:29:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 154,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3294:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 164,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 158,
																	"name": "_token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 145,
																	"src": "3362:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ERC20_$114",
																		"typeString": "contract ERC20"
																	}
																},
																"id": 159,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "transfer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 77,
																"src": "3362:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 160,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "selector",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "3362:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														{
															"argumentTypes": null,
															"id": 161,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 147,
															"src": "3400:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 162,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 149,
															"src": "3417:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 156,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -1,
															"src": "3326:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 157,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "encodeWithSelector",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "3326:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes4) pure returns (bytes memory)"
														}
													},
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3326:108:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3294:140:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 168,
																	"name": "_token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 145,
																	"src": "3481:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ERC20_$114",
																		"typeString": "contract ERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ERC20_$114",
																		"typeString": "contract ERC20"
																	}
																],
																"id": 167,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3473:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 166,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3473:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 169,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3473:15:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 170,
															"name": "transferCallData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 155,
															"src": "3490:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 165,
														"name": "invokeAndCheckSuccess",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 142,
														"src": "3451:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (address,bytes memory) returns (bool)"
														}
													},
													"id": 171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3451:56:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 153,
												"id": 172,
												"nodeType": "Return",
												"src": "3444:63:1"
											}
										]
									},
									"documentation": {
										"id": 143,
										"nodeType": "StructuredDocumentation",
										"src": "3022:167:1",
										"text": "@dev Same as a standards-compliant ERC20.transfer() that never reverts (returns false).\n     Note that this makes an external call to the token."
									},
									"id": 174,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "_token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 174,
												"src": "3216:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ERC20_$114",
													"typeString": "contract ERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 144,
													"name": "ERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 114,
													"src": "3216:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC20_$114",
														"typeString": "contract ERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 174,
												"src": "3230:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3230:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 174,
												"src": "3243:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 148,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3243:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3215:44:1"
									},
									"returnParameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 174,
												"src": "3278:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 151,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3278:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3277:6:1"
									},
									"scope": 242,
									"src": "3194:320:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 208,
										"nodeType": "Block",
										"src": "3805:261:1",
										"statements": [
											{
												"assignments": [
													189
												],
												"declarations": [
													{
														"constant": false,
														"id": 189,
														"mutability": "mutable",
														"name": "transferFromCallData",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 208,
														"src": "3815:33:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 188,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3815:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 199,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 192,
																	"name": "_token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 177,
																	"src": "3887:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ERC20_$114",
																		"typeString": "contract ERC20"
																	}
																},
																"id": 193,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 97,
																"src": "3887:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 194,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "selector",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "3887:28:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														{
															"argumentTypes": null,
															"id": 195,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 179,
															"src": "3929:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 196,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 181,
															"src": "3948:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 197,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 183,
															"src": "3965:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 190,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -1,
															"src": "3851:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 191,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "encodeWithSelector",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "3851:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes4) pure returns (bytes memory)"
														}
													},
													"id": 198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3851:131:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3815:167:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 203,
																	"name": "_token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 177,
																	"src": "4029:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ERC20_$114",
																		"typeString": "contract ERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ERC20_$114",
																		"typeString": "contract ERC20"
																	}
																],
																"id": 202,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4021:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 201,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4021:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 204,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4021:15:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 205,
															"name": "transferFromCallData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 189,
															"src": "4038:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 200,
														"name": "invokeAndCheckSuccess",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 142,
														"src": "3999:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (address,bytes memory) returns (bool)"
														}
													},
													"id": 206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3999:60:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 187,
												"id": 207,
												"nodeType": "Return",
												"src": "3992:67:1"
											}
										]
									},
									"documentation": {
										"id": 175,
										"nodeType": "StructuredDocumentation",
										"src": "3520:171:1",
										"text": "@dev Same as a standards-compliant ERC20.transferFrom() that never reverts (returns false).\n     Note that this makes an external call to the token."
									},
									"id": 209,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "_token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 209,
												"src": "3722:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ERC20_$114",
													"typeString": "contract ERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 176,
													"name": "ERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 114,
													"src": "3722:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC20_$114",
														"typeString": "contract ERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "_from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 209,
												"src": "3736:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 178,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3736:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 209,
												"src": "3751:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3751:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 209,
												"src": "3764:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3764:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3721:59:1"
									},
									"returnParameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 209,
												"src": "3799:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 185,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3799:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3798:6:1"
									},
									"scope": 242,
									"src": "3696:370:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 240,
										"nodeType": "Block",
										"src": "4337:232:1",
										"statements": [
											{
												"assignments": [
													222
												],
												"declarations": [
													{
														"constant": false,
														"id": 222,
														"mutability": "mutable",
														"name": "approveCallData",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 240,
														"src": "4347:28:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 221,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4347:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 231,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 225,
																	"name": "_token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 212,
																	"src": "4414:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ERC20_$114",
																		"typeString": "contract ERC20"
																	}
																},
																"id": 226,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "approve",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 86,
																"src": "4414:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 227,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "selector",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "4414:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														{
															"argumentTypes": null,
															"id": 228,
															"name": "_spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 214,
															"src": "4451:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 229,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "4473:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 223,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -1,
															"src": "4378:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 224,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "encodeWithSelector",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "4378:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes4) pure returns (bytes memory)"
														}
													},
													"id": 230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4378:112:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4347:143:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 235,
																	"name": "_token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 212,
																	"src": "4537:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ERC20_$114",
																		"typeString": "contract ERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ERC20_$114",
																		"typeString": "contract ERC20"
																	}
																],
																"id": 234,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4529:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 233,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4529:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 236,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4529:15:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 237,
															"name": "approveCallData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 222,
															"src": "4546:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 232,
														"name": "invokeAndCheckSuccess",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 142,
														"src": "4507:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (address,bytes memory) returns (bool)"
														}
													},
													"id": 238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4507:55:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 220,
												"id": 239,
												"nodeType": "Return",
												"src": "4500:62:1"
											}
										]
									},
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "4072:166:1",
										"text": "@dev Same as a standards-compliant ERC20.approve() that never reverts (returns false).\n     Note that this makes an external call to the token."
									},
									"id": 241,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "_token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 241,
												"src": "4264:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ERC20_$114",
													"typeString": "contract ERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 211,
													"name": "ERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 114,
													"src": "4264:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC20_$114",
														"typeString": "contract ERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "_spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 241,
												"src": "4278:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4278:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 241,
												"src": "4296:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 215,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4296:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4263:49:1"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 241,
												"src": "4331:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 218,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4331:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4330:6:1"
									},
									"scope": 242,
									"src": "4243:326:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 243,
							"src": "1389:3182:1"
						}
					],
					"src": "443:4128:1"
				},
				"id": 1
			},
			".deps/npm/@aragon/govern-contract-utils/contracts/protocol/IArbitrable.sol": {
				"ast": {
					"absolutePath": ".deps/npm/@aragon/govern-contract-utils/contracts/protocol/IArbitrable.sol",
					"exportedSymbols": {
						"IArbitrable": [
							295
						]
					},
					"id": 296,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 244,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".8"
							],
							"nodeType": "PragmaDirective",
							"src": "141:23:2"
						},
						{
							"absolutePath": ".deps/npm/@aragon/govern-contract-utils/contracts/protocol/IArbitrator.sol",
							"file": "./IArbitrator.sol",
							"id": 245,
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 344,
							"src": "166:27:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": false,
							"id": 295,
							"linearizedBaseContracts": [
								295
							],
							"name": "IArbitrable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 251,
									"mutability": "constant",
									"name": "ARBITRABLE_INTERFACE_ID",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 295,
									"src": "231:69:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 246,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "231:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"argumentTypes": null,
										"arguments": [
											{
												"argumentTypes": null,
												"hexValue": "30783838663365653639",
												"id": 249,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "289:10:2",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2297687657_by_1",
													"typeString": "int_const 2297687657"
												},
												"value": "0x88f3ee69"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_2297687657_by_1",
													"typeString": "int_const 2297687657"
												}
											],
											"id": 248,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "282:6:2",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_bytes4_$",
												"typeString": "type(bytes4)"
											},
											"typeName": {
												"id": 247,
												"name": "bytes4",
												"nodeType": "ElementaryTypeName",
												"src": "282:6:2",
												"typeDescriptions": {
													"typeIdentifier": null,
													"typeString": null
												}
											}
										},
										"id": 250,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "282:18:2",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 254,
									"mutability": "constant",
									"name": "ALLOW_RULING",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 295,
									"src": "306:42:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 252,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "306:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "34",
										"id": 253,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "347:1:2",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_4_by_1",
											"typeString": "int_const 4"
										},
										"value": "4"
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "355:300:2",
										"text": "@dev Emitted when an IArbitrable instance's dispute is ruled by an IArbitrator\n@param arbitrator IArbitrator instance ruling the dispute\n@param disputeId Identification number of the dispute being ruled by the arbitrator\n@param ruling Ruling given by the arbitrator"
									},
									"id": 263,
									"name": "Ruled",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"indexed": true,
												"mutability": "mutable",
												"name": "arbitrator",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 263,
												"src": "672:30:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IArbitrator_$343",
													"typeString": "contract IArbitrator"
												},
												"typeName": {
													"contractScope": null,
													"id": 256,
													"name": "IArbitrator",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 343,
													"src": "672:11:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IArbitrator_$343",
														"typeString": "contract IArbitrator"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 259,
												"indexed": true,
												"mutability": "mutable",
												"name": "disputeId",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 263,
												"src": "704:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "704:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"indexed": false,
												"mutability": "mutable",
												"name": "ruling",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 263,
												"src": "731:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 260,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "731:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "671:75:2"
									},
									"src": "660:87:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 264,
										"nodeType": "StructuredDocumentation",
										"src": "753:469:2",
										"text": "@dev Emitted when new evidence is submitted for the IArbitrable instance's dispute\n@param arbitrator IArbitrator submitting the evidence for\n@param disputeId Identification number of the dispute receiving new evidence\n@param submitter Address of the account submitting the evidence\n@param evidence Data submitted for the evidence of the dispute\n@param finished Whether or not the submitter has finished submitting evidence"
									},
									"id": 276,
									"name": "EvidenceSubmitted",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 266,
												"indexed": true,
												"mutability": "mutable",
												"name": "arbitrator",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 276,
												"src": "1251:30:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IArbitrator_$343",
													"typeString": "contract IArbitrator"
												},
												"typeName": {
													"contractScope": null,
													"id": 265,
													"name": "IArbitrator",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 343,
													"src": "1251:11:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IArbitrator_$343",
														"typeString": "contract IArbitrator"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 268,
												"indexed": true,
												"mutability": "mutable",
												"name": "disputeId",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 276,
												"src": "1283:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 267,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1283:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 270,
												"indexed": true,
												"mutability": "mutable",
												"name": "submitter",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 276,
												"src": "1310:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1310:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 272,
												"indexed": false,
												"mutability": "mutable",
												"name": "evidence",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 276,
												"src": "1337:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 271,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1337:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 274,
												"indexed": false,
												"mutability": "mutable",
												"name": "finished",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 276,
												"src": "1353:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 273,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1353:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1250:117:2"
									},
									"src": "1227:141:2"
								},
								{
									"body": null,
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "1374:269:2",
										"text": "@dev Submit evidence for a dispute\n@param _disputeId Id of the dispute in the Court\n@param _evidence Data submitted for the evidence related to the dispute\n@param _finished Whether or not the submitter has finished submitting evidence"
									},
									"functionSelector": "b9e9823f",
									"id": 286,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "submitEvidence",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "_disputeId",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 286,
												"src": "1672:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1672:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "_evidence",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 286,
												"src": "1692:24:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 280,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1692:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "_finished",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 286,
												"src": "1718:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 282,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1718:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1671:62:2"
									},
									"returnParameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1750:0:2"
									},
									"scope": 295,
									"src": "1648:103:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 287,
										"nodeType": "StructuredDocumentation",
										"src": "1757:301:2",
										"text": "@dev Give a ruling for a certain dispute, the account calling it must have rights to rule on the contract\n@param _disputeId Identification number of the dispute to be ruled\n@param _ruling Ruling given by the arbitrator, where 0 is reserved for \"refused to make a decision\""
									},
									"functionSelector": "311a6c56",
									"id": 294,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "rule",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "_disputeId",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 294,
												"src": "2077:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 288,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2077:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "_ruling",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 294,
												"src": "2097:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2097:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2076:37:2"
									},
									"returnParameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2130:0:2"
									},
									"scope": 295,
									"src": "2063:68:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								}
							],
							"scope": 296,
							"src": "195:1938:2"
						}
					],
					"src": "141:1992:2"
				},
				"id": 2
			},
			".deps/npm/@aragon/govern-contract-utils/contracts/protocol/IArbitrator.sol": {
				"ast": {
					"absolutePath": ".deps/npm/@aragon/govern-contract-utils/contracts/protocol/IArbitrator.sol",
					"exportedSymbols": {
						"IArbitrator": [
							343
						]
					},
					"id": 344,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 297,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".8"
							],
							"nodeType": "PragmaDirective",
							"src": "141:23:3"
						},
						{
							"absolutePath": ".deps/npm/@aragon/govern-contract-utils/contracts/erc20/SafeERC20.sol",
							"file": "../erc20/SafeERC20.sol",
							"id": 298,
							"nodeType": "ImportDirective",
							"scope": 344,
							"sourceUnit": 243,
							"src": "166:32:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 343,
							"linearizedBaseContracts": [
								343
							],
							"name": "IArbitrator",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "228:345:3",
										"text": "@dev Create a dispute over the Arbitrable sender with a number of possible rulings\n@param _possibleRulings Number of possible rulings allowed for the dispute\n@param _metadata Optional metadata that can be used to provide additional information on the dispute to be created\n@return Dispute identification number"
									},
									"functionSelector": "c13517e1",
									"id": 308,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createDispute",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "_possibleRulings",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 308,
												"src": "601:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 300,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "_metadata",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 308,
												"src": "627:24:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 302,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "627:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "600:52:3"
									},
									"returnParameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 308,
												"src": "671:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "671:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "670:9:3"
									},
									"scope": 343,
									"src": "578:102:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "686:161:3",
										"text": "@dev Close the evidence period of a dispute\n@param _disputeId Identification number of the dispute to close its evidence submitting period"
									},
									"functionSelector": "7e9adccf",
									"id": 314,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "closeEvidencePeriod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "_disputeId",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 314,
												"src": "881:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 310,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "881:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "880:20:3"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "909:0:3"
									},
									"scope": 343,
									"src": "852:58:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 315,
										"nodeType": "StructuredDocumentation",
										"src": "916:170:3",
										"text": "@dev Execute the Arbitrable associated to a dispute based on its final ruling\n@param _disputeId Identification number of the dispute to be executed"
									},
									"functionSelector": "8bb04875",
									"id": 320,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "executeRuling",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "_disputeId",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 320,
												"src": "1114:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 316,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1114:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1113:20:3"
									},
									"returnParameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1142:0:3"
									},
									"scope": 343,
									"src": "1091:52:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 321,
										"nodeType": "StructuredDocumentation",
										"src": "1149:303:3",
										"text": "@dev Tell the dispute fees information to create a dispute\n@return recipient Address where the corresponding dispute fees must be transferred to\n@return feeToken ERC20 token used for the fees\n@return feeAmount Total amount of fees that must be allowed to the recipient"
									},
									"functionSelector": "7b751b9e",
									"id": 330,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getDisputeFees",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1480:2:3"
									},
									"returnParameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 330,
												"src": "1506:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1506:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "feeToken",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 330,
												"src": "1525:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ERC20_$114",
													"typeString": "contract ERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 325,
													"name": "ERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 114,
													"src": "1525:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC20_$114",
														"typeString": "contract ERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "feeAmount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 330,
												"src": "1541:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 327,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1541:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1505:54:3"
									},
									"scope": 343,
									"src": "1457:103:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 331,
										"nodeType": "StructuredDocumentation",
										"src": "1566:422:3",
										"text": "@dev Tell the subscription fees information for a subscriber to be up-to-date\n@param _subscriber Address of the account paying the subscription fees for\n@return recipient Address where the corresponding subscriptions fees must be transferred to\n@return feeToken ERC20 token used for the subscription fees\n@return feeAmount Total amount of fees that must be allowed to the recipient"
									},
									"functionSelector": "e3f2311e",
									"id": 342,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getSubscriptionFees",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "_subscriber",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 342,
												"src": "2022:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2022:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2021:21:3"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 342,
												"src": "2066:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 335,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2066:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "feeToken",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 342,
												"src": "2085:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ERC20_$114",
													"typeString": "contract ERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 337,
													"name": "ERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 114,
													"src": "2085:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC20_$114",
														"typeString": "contract ERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "feeAmount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 342,
												"src": "2101:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 339,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2101:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2065:54:3"
									},
									"scope": 343,
									"src": "1993:127:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 344,
							"src": "200:1922:3"
						}
					],
					"src": "141:1981:3"
				},
				"id": 3
			}
		}
	}
}