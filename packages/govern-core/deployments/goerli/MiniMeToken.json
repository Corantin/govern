{
  "address": "0x760579CDfd500Cd8345530Fe217EC70839AbF61F",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "creationBlock",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newController",
          "type": "address"
        }
      ],
      "name": "changeController",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_blockNumber",
          "type": "uint256"
        }
      ],
      "name": "balanceOfAt",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_cloneTokenName",
          "type": "string"
        },
        {
          "name": "_cloneDecimalUnits",
          "type": "uint8"
        },
        {
          "name": "_cloneTokenSymbol",
          "type": "string"
        },
        {
          "name": "_snapshotBlock",
          "type": "uint256"
        },
        {
          "name": "_transfersEnabled",
          "type": "bool"
        }
      ],
      "name": "createCloneToken",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "balance",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "parentToken",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "generateTokens",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_blockNumber",
          "type": "uint256"
        }
      ],
      "name": "totalSupplyAt",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "transfersEnabled",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "parentSnapShotBlock",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        },
        {
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "approveAndCall",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "destroyTokens",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "remaining",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "claimTokens",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "tokenFactory",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_transfersEnabled",
          "type": "bool"
        }
      ],
      "name": "enableTransfers",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "controller",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_tokenFactory",
          "type": "address"
        },
        {
          "name": "_parentToken",
          "type": "address"
        },
        {
          "name": "_parentSnapShotBlock",
          "type": "uint256"
        },
        {
          "name": "_tokenName",
          "type": "string"
        },
        {
          "name": "_decimalUnits",
          "type": "uint8"
        },
        {
          "name": "_tokenSymbol",
          "type": "string"
        },
        {
          "name": "_transfersEnabled",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_token",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_controller",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "ClaimedTokens",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_cloneToken",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_snapshotBlock",
          "type": "uint256"
        }
      ],
      "name": "NewCloneToken",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    }
  ],
  "transactionHash": "0x6659c16ffe1924653bbd50891b4ca9e6316dde5a494b253eb397174730cee993",
  "receipt": {
    "to": null,
    "from": "0x91B0d67D3F47A30FBEeB159E67209Ad6cb2cE22E",
    "contractAddress": "0x760579CDfd500Cd8345530Fe217EC70839AbF61F",
    "transactionIndex": 53,
    "gasUsed": "1656321",
    "logsBloom": "0x
    "blockHash": "0xc3fb2a36132ed6d9c9cc5ed569b5395d1c543c2c67035c06610fa46f6816d538",
    "transactionHash": "0x6659c16ffe1924653bbd50891b4ca9e6316dde5a494b253eb397174730cee993",
    "logs": [],
    "blockNumber": 7548831,
    "cumulativeGasUsed": "16186783",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x8E0CdcF47a394d511AA3b25c14e99eFa8dA68845",
    "0x0000000000000000000000000000000000000000",
    0,
    "HoneyTest",
    18,
    "HNYT",
    true
  ],
  "solcInputHash": "bf9b34617f4f5fb9f5bf5e1e64fdbae5",
  "metadata": "{\"compiler\":{\"version\":\"0.4.24+commit.e67f0147\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"creationBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newController\",\"type\":\"address\"}],\"name\":\"changeController\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"balanceOfAt\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_cloneTokenName\",\"type\":\"string\"},{\"name\":\"_cloneDecimalUnits\",\"type\":\"uint8\"},{\"name\":\"_cloneTokenSymbol\",\"type\":\"string\"},{\"name\":\"_snapshotBlock\",\"type\":\"uint256\"},{\"name\":\"_transfersEnabled\",\"type\":\"bool\"}],\"name\":\"createCloneToken\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"parentToken\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"generateTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"totalSupplyAt\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"transfersEnabled\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"parentSnapShotBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"destroyTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"claimTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenFactory\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_transfersEnabled\",\"type\":\"bool\"}],\"name\":\"enableTransfers\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_tokenFactory\",\"type\":\"address\"},{\"name\":\"_parentToken\",\"type\":\"address\"},{\"name\":\"_parentSnapShotBlock\",\"type\":\"uint256\"},{\"name\":\"_tokenName\",\"type\":\"string\"},{\"name\":\"_decimalUnits\",\"type\":\"uint8\"},{\"name\":\"_tokenSymbol\",\"type\":\"string\"},{\"name\":\"_transfersEnabled\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_token\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_controller\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"ClaimedTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_cloneToken\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_snapshotBlock\",\"type\":\"uint256\"}],\"name\":\"NewCloneToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"This function makes it easy to read the `allowed[]` map\\r\",\"params\":{\"_owner\":\"The address of the account that owns the token\\r\",\"_spender\":\"The address of the account able to transfer the tokens\\r\"},\"return\":\"Amount of remaining tokens of _owner that _spender is allowed\\r  to spend\\r\"},\"approve(address,uint256)\":{\"params\":{\"_amount\":\"The amount of tokens to be approved for transfer\\r\",\"_spender\":\"The address of the account able to transfer the tokens\\r\"},\"return\":\"True if the approval was successful\\r\"},\"approveAndCall(address,uint256,bytes)\":{\"params\":{\"_amount\":\"The amount of tokens to be approved for transfer\\r\",\"_spender\":\"The address of the contract able to transfer the tokens\\r\"},\"return\":\"True if the function call was successful\\r\"},\"balanceOf(address)\":{\"params\":{\"_owner\":\"The address that's balance is being requested\\r\"},\"return\":\"The balance of `_owner` at the current block\\r\"},\"balanceOfAt(address,uint256)\":{\"details\":\"Queries the balance of `_owner` at a specific `_blockNumber`\\r\",\"params\":{\"_blockNumber\":\"The block number when the balance is queried\\r\",\"_owner\":\"The address from which the balance will be retrieved\\r\"},\"return\":\"The balance at `_blockNumber`\\r\"},\"changeController(address)\":{\"params\":{\"_newController\":\"The new controller of the contract\\r\"}},\"claimTokens(address)\":{\"params\":{\"_token\":\"The address of the token contract that you want to recover\\r  set to 0 in case you want to extract ether.\\r\"}},\"createCloneToken(string,uint8,string,uint256,bool)\":{\"params\":{\"_cloneDecimalUnits\":\"Number of decimals of the smallest unit\\r\",\"_cloneTokenName\":\"Name of the clone token\\r\",\"_cloneTokenSymbol\":\"Symbol of the clone token\\r\",\"_snapshotBlock\":\"Block when the distribution of the parent token is\\r  copied to set the initial distribution of the new clone token;\\r  if the block is zero than the actual block, the current block is used\\r\",\"_transfersEnabled\":\"True if transfers are allowed in the clone\\r\"},\"return\":\"The address of the new MiniMeToken Contract\\r\"},\"destroyTokens(address,uint256)\":{\"params\":{\"_amount\":\"The quantity of tokens to burn\\r\",\"_owner\":\"The address that will lose the tokens\\r\"},\"return\":\"True if the tokens are burned correctly\\r\"},\"enableTransfers(bool)\":{\"params\":{\"_transfersEnabled\":\"True if transfers are allowed in the clone\\r\"}},\"generateTokens(address,uint256)\":{\"params\":{\"_amount\":\"The quantity of tokens generated\\r\",\"_owner\":\"The address that will be assigned the new tokens\\r\"},\"return\":\"True if the tokens are generated correctly\\r\"},\"totalSupply()\":{\"details\":\"This function makes it easy to get the total number of tokens\\r\",\"return\":\"The total number of tokens\\r\"},\"totalSupplyAt(uint256)\":{\"params\":{\"_blockNumber\":\"The block number when the totalSupply is queried\\r\"},\"return\":\"The total amount of tokens at `_blockNumber`\\r\"},\"transfer(address,uint256)\":{\"params\":{\"_amount\":\"The amount of tokens to be transferred\\r\",\"_to\":\"The address of the recipient\\r\"},\"return\":\"Whether the transfer was successful or not\\r\"},\"transferFrom(address,address,uint256)\":{\"params\":{\"_amount\":\"The amount of tokens to be transferred\\r\",\"_from\":\"The address holding the tokens being transferred\\r\",\"_to\":\"The address of the recipient\\r\"},\"return\":\"True if the transfer was successful\\r\"}}},\"userdoc\":{\"methods\":{\"approve(address,uint256)\":{\"notice\":\"`msg.sender` approves `_spender` to spend `_amount` tokens on\\r  its behalf. This is a modified version of the ERC20 approve function\\r  to be a little bit safer\\r\"},\"approveAndCall(address,uint256,bytes)\":{\"notice\":\"`msg.sender` approves `_spender` to send `_amount` tokens on\\r  its behalf, and then a function is triggered in the contract that is\\r  being approved, `_spender`. This allows users to use their tokens to\\r  interact with contracts in one function call instead of two\\r\"},\"balanceOfAt(address,uint256)\":{\"notice\":\"/////////////\\r\"},\"changeController(address)\":{\"notice\":\"Changes the controller of the contract\\r\"},\"claimTokens(address)\":{\"notice\":\"///////\\rThis method can be used by the controller to extract mistakenly\\r  sent tokens to this contract.\\r\"},\"createCloneToken(string,uint8,string,uint256,bool)\":{\"notice\":\"/////////////\\rCreates a new clone token with the initial distribution being\\r  this token at `_snapshotBlock`\\r\"},\"destroyTokens(address,uint256)\":{\"notice\":\"Burns `_amount` tokens from `_owner`\\r\"},\"enableTransfers(bool)\":{\"notice\":\"/////////////\\rEnables token holders to transfer their tokens freely if true\\r\"},\"generateTokens(address,uint256)\":{\"notice\":\"/////////////\\rGenerates `_amount` tokens that are assigned to `_owner`\\r\"},\"totalSupplyAt(uint256)\":{\"notice\":\"Total amount of tokens at a specific `_blockNumber`.\\r\"},\"transfer(address,uint256)\":{\"notice\":\"////////////////\\rSend `_amount` tokens to `_to` from `msg.sender`\\r\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Send `_amount` tokens to `_to` from `_from` on the condition it\\r  is approved by `_from`\\r\"}}}},\"settings\":{\"compilationTarget\":{\"contracts/HoneyTest.sol\":\"MiniMeToken\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"contracts/HoneyTest.sol\":{\"content\":\"/**\\r\\n *Submitted for verification at Etherscan.io on 2019-11-21\\r\\n*/\\r\\n\\r\\n// File: ../minime/contracts/ITokenController.sol\\r\\n\\r\\npragma solidity ^0.4.24;\\r\\n\\r\\n/// @dev The token controller contract must implement these functions\\r\\n\\r\\n\\r\\ninterface ITokenController {\\r\\n    /// @notice Called when `_owner` sends ether to the MiniMe Token contract\\r\\n    /// @param _owner The address that sent the ether to create tokens\\r\\n    /// @return True if the ether is accepted, false if it throws\\r\\n    function proxyPayment(address _owner) external payable returns(bool);\\r\\n\\r\\n    /// @notice Notifies the controller about a token transfer allowing the\\r\\n    ///  controller to react if desired\\r\\n    /// @param _from The origin of the transfer\\r\\n    /// @param _to The destination of the transfer\\r\\n    /// @param _amount The amount of the transfer\\r\\n    /// @return False if the controller does not authorize the transfer\\r\\n    function onTransfer(address _from, address _to, uint _amount) external returns(bool);\\r\\n\\r\\n    /// @notice Notifies the controller about an approval allowing the\\r\\n    ///  controller to react if desired\\r\\n    /// @param _owner The address that calls `approve()`\\r\\n    /// @param _spender The spender in the `approve()` call\\r\\n    /// @param _amount The amount in the `approve()` call\\r\\n    /// @return False if the controller does not authorize the approval\\r\\n    function onApprove(address _owner, address _spender, uint _amount) external returns(bool);\\r\\n}\\r\\n\\r\\n// File: ../minime/contracts/MiniMeToken.sol\\r\\n\\r\\npragma solidity ^0.4.24;\\r\\n\\r\\n/*\\r\\n    Copyright 2016, Jordi Baylina\\r\\n    This program is free software: you can redistribute it and/or modify\\r\\n    it under the terms of the GNU General Public License as published by\\r\\n    the Free Software Foundation, either version 3 of the License, or\\r\\n    (at your option) any later version.\\r\\n    This program is distributed in the hope that it will be useful,\\r\\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\\r\\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\r\\n    GNU General Public License for more details.\\r\\n    You should have received a copy of the GNU General Public License\\r\\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\\r\\n */\\r\\n\\r\\n/// @title MiniMeToken Contract\\r\\n/// @author Jordi Baylina\\r\\n/// @dev This token contract's goal is to make it easy for anyone to clone this\\r\\n///  token using the token distribution at a given block, this will allow DAO's\\r\\n///  and DApps to upgrade their features in a decentralized manner without\\r\\n///  affecting the original token\\r\\n/// @dev It is ERC20 compliant, but still needs to under go further testing.\\r\\n\\r\\n\\r\\ncontract Controlled {\\r\\n    /// @notice The address of the controller is the only address that can call\\r\\n    ///  a function with this modifier\\r\\n    modifier onlyController {\\r\\n        require(msg.sender == controller);\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    address public controller;\\r\\n\\r\\n    function Controlled()  public { controller = msg.sender;}\\r\\n\\r\\n    /// @notice Changes the controller of the contract\\r\\n    /// @param _newController The new controller of the contract\\r\\n    function changeController(address _newController) onlyController  public {\\r\\n        controller = _newController;\\r\\n    }\\r\\n}\\r\\n\\r\\ncontract ApproveAndCallFallBack {\\r\\n    function receiveApproval(\\r\\n        address from,\\r\\n        uint256 _amount,\\r\\n        address _token,\\r\\n        bytes _data\\r\\n    ) public;\\r\\n}\\r\\n\\r\\n/// @dev The actual token contract, the default controller is the msg.sender\\r\\n///  that deploys the contract, so usually this token will be deployed by a\\r\\n///  token controller contract, which Giveth will call a \\\"Campaign\\\"\\r\\ncontract MiniMeToken is Controlled {\\r\\n\\r\\n    string public name;                //The Token's name: e.g. DigixDAO Tokens\\r\\n    uint8 public decimals;             //Number of decimals of the smallest unit\\r\\n    string public symbol;              //An identifier: e.g. REP\\r\\n    string public version = \\\"MMT_0.1\\\"; //An arbitrary versioning scheme\\r\\n\\r\\n\\r\\n    /// @dev `Checkpoint` is the structure that attaches a block number to a\\r\\n    ///  given value, the block number attached is the one that last changed the\\r\\n    ///  value\\r\\n    struct Checkpoint {\\r\\n\\r\\n        // `fromBlock` is the block number that the value was generated from\\r\\n        uint128 fromBlock;\\r\\n\\r\\n        // `value` is the amount of tokens at a specific block number\\r\\n        uint128 value;\\r\\n    }\\r\\n\\r\\n    // `parentToken` is the Token address that was cloned to produce this token;\\r\\n    //  it will be 0x0 for a token that was not cloned\\r\\n    MiniMeToken public parentToken;\\r\\n\\r\\n    // `parentSnapShotBlock` is the block number from the Parent Token that was\\r\\n    //  used to determine the initial distribution of the Clone Token\\r\\n    uint public parentSnapShotBlock;\\r\\n\\r\\n    // `creationBlock` is the block number that the Clone Token was created\\r\\n    uint public creationBlock;\\r\\n\\r\\n    // `balances` is the map that tracks the balance of each address, in this\\r\\n    //  contract when the balance changes the block number that the change\\r\\n    //  occurred is also included in the map\\r\\n    mapping (address => Checkpoint[]) balances;\\r\\n\\r\\n    // `allowed` tracks any extra transfer rights as in all ERC20 tokens\\r\\n    mapping (address => mapping (address => uint256)) allowed;\\r\\n\\r\\n    // Tracks the history of the `totalSupply` of the token\\r\\n    Checkpoint[] totalSupplyHistory;\\r\\n\\r\\n    // Flag that determines if the token is transferable or not.\\r\\n    bool public transfersEnabled;\\r\\n\\r\\n    // The factory used to create new clone tokens\\r\\n    MiniMeTokenFactory public tokenFactory;\\r\\n\\r\\n////////////////\\r\\n// Constructor\\r\\n////////////////\\r\\n\\r\\n    /// @notice Constructor to create a MiniMeToken\\r\\n    /// @param _tokenFactory The address of the MiniMeTokenFactory contract that\\r\\n    ///  will create the Clone token contracts, the token factory needs to be\\r\\n    ///  deployed first\\r\\n    /// @param _parentToken Address of the parent token, set to 0x0 if it is a\\r\\n    ///  new token\\r\\n    /// @param _parentSnapShotBlock Block of the parent token that will\\r\\n    ///  determine the initial distribution of the clone token, set to 0 if it\\r\\n    ///  is a new token\\r\\n    /// @param _tokenName Name of the new token\\r\\n    /// @param _decimalUnits Number of decimals of the new token\\r\\n    /// @param _tokenSymbol Token Symbol for the new token\\r\\n    /// @param _transfersEnabled If true, tokens will be able to be transferred\\r\\n    function MiniMeToken(\\r\\n        MiniMeTokenFactory _tokenFactory,\\r\\n        MiniMeToken _parentToken,\\r\\n        uint _parentSnapShotBlock,\\r\\n        string _tokenName,\\r\\n        uint8 _decimalUnits,\\r\\n        string _tokenSymbol,\\r\\n        bool _transfersEnabled\\r\\n    )  public\\r\\n    {\\r\\n        tokenFactory = _tokenFactory;\\r\\n        name = _tokenName;                                 // Set the name\\r\\n        decimals = _decimalUnits;                          // Set the decimals\\r\\n        symbol = _tokenSymbol;                             // Set the symbol\\r\\n        parentToken = _parentToken;\\r\\n        parentSnapShotBlock = _parentSnapShotBlock;\\r\\n        transfersEnabled = _transfersEnabled;\\r\\n        creationBlock = block.number;\\r\\n    }\\r\\n\\r\\n\\r\\n///////////////////\\r\\n// ERC20 Methods\\r\\n///////////////////\\r\\n\\r\\n    /// @notice Send `_amount` tokens to `_to` from `msg.sender`\\r\\n    /// @param _to The address of the recipient\\r\\n    /// @param _amount The amount of tokens to be transferred\\r\\n    /// @return Whether the transfer was successful or not\\r\\n    function transfer(address _to, uint256 _amount) public returns (bool success) {\\r\\n        require(transfersEnabled);\\r\\n        return doTransfer(msg.sender, _to, _amount);\\r\\n    }\\r\\n\\r\\n    /// @notice Send `_amount` tokens to `_to` from `_from` on the condition it\\r\\n    ///  is approved by `_from`\\r\\n    /// @param _from The address holding the tokens being transferred\\r\\n    /// @param _to The address of the recipient\\r\\n    /// @param _amount The amount of tokens to be transferred\\r\\n    /// @return True if the transfer was successful\\r\\n    function transferFrom(address _from, address _to, uint256 _amount) public returns (bool success) {\\r\\n\\r\\n        // The controller of this contract can move tokens around at will,\\r\\n        //  this is important to recognize! Confirm that you trust the\\r\\n        //  controller of this contract, which in most situations should be\\r\\n        //  another open source smart contract or 0x0\\r\\n        if (msg.sender != controller) {\\r\\n            require(transfersEnabled);\\r\\n\\r\\n            // The standard ERC 20 transferFrom functionality\\r\\n            if (allowed[_from][msg.sender] < _amount)\\r\\n                return false;\\r\\n            allowed[_from][msg.sender] -= _amount;\\r\\n        }\\r\\n        return doTransfer(_from, _to, _amount);\\r\\n    }\\r\\n\\r\\n    /// @dev This is the actual transfer function in the token contract, it can\\r\\n    ///  only be called by other functions in this contract.\\r\\n    /// @param _from The address holding the tokens being transferred\\r\\n    /// @param _to The address of the recipient\\r\\n    /// @param _amount The amount of tokens to be transferred\\r\\n    /// @return True if the transfer was successful\\r\\n    function doTransfer(address _from, address _to, uint _amount) internal returns(bool) {\\r\\n        if (_amount == 0) {\\r\\n            return true;\\r\\n        }\\r\\n        require(parentSnapShotBlock < block.number);\\r\\n        // Do not allow transfer to 0x0 or the token contract itself\\r\\n        require((_to != 0) && (_to != address(this)));\\r\\n        // If the amount being transfered is more than the balance of the\\r\\n        //  account the transfer returns false\\r\\n        var previousBalanceFrom = balanceOfAt(_from, block.number);\\r\\n        if (previousBalanceFrom < _amount) {\\r\\n            return false;\\r\\n        }\\r\\n        // Alerts the token controller of the transfer\\r\\n        if (isContract(controller)) {\\r\\n            // Adding the ` == true` makes the linter shut up so...\\r\\n            require(ITokenController(controller).onTransfer(_from, _to, _amount) == true);\\r\\n        }\\r\\n        // First update the balance array with the new value for the address\\r\\n        //  sending the tokens\\r\\n        updateValueAtNow(balances[_from], previousBalanceFrom - _amount);\\r\\n        // Then update the balance array with the new value for the address\\r\\n        //  receiving the tokens\\r\\n        var previousBalanceTo = balanceOfAt(_to, block.number);\\r\\n        require(previousBalanceTo + _amount >= previousBalanceTo); // Check for overflow\\r\\n        updateValueAtNow(balances[_to], previousBalanceTo + _amount);\\r\\n        // An event to make the transfer easy to find on the blockchain\\r\\n        Transfer(_from, _to, _amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /// @param _owner The address that's balance is being requested\\r\\n    /// @return The balance of `_owner` at the current block\\r\\n    function balanceOf(address _owner) public constant returns (uint256 balance) {\\r\\n        return balanceOfAt(_owner, block.number);\\r\\n    }\\r\\n\\r\\n    /// @notice `msg.sender` approves `_spender` to spend `_amount` tokens on\\r\\n    ///  its behalf. This is a modified version of the ERC20 approve function\\r\\n    ///  to be a little bit safer\\r\\n    /// @param _spender The address of the account able to transfer the tokens\\r\\n    /// @param _amount The amount of tokens to be approved for transfer\\r\\n    /// @return True if the approval was successful\\r\\n    function approve(address _spender, uint256 _amount) public returns (bool success) {\\r\\n        require(transfersEnabled);\\r\\n\\r\\n        // To change the approve amount you first have to reduce the addresses`\\r\\n        //  allowance to zero by calling `approve(_spender,0)` if it is not\\r\\n        //  already 0 to mitigate the race condition described here:\\r\\n        //  https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\r\\n        require((_amount == 0) || (allowed[msg.sender][_spender] == 0));\\r\\n\\r\\n        // Alerts the token controller of the approve function call\\r\\n        if (isContract(controller)) {\\r\\n            // Adding the ` == true` makes the linter shut up so...\\r\\n            require(ITokenController(controller).onApprove(msg.sender, _spender, _amount) == true);\\r\\n        }\\r\\n\\r\\n        allowed[msg.sender][_spender] = _amount;\\r\\n        Approval(msg.sender, _spender, _amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /// @dev This function makes it easy to read the `allowed[]` map\\r\\n    /// @param _owner The address of the account that owns the token\\r\\n    /// @param _spender The address of the account able to transfer the tokens\\r\\n    /// @return Amount of remaining tokens of _owner that _spender is allowed\\r\\n    ///  to spend\\r\\n    function allowance(address _owner, address _spender) public constant returns (uint256 remaining) {\\r\\n        return allowed[_owner][_spender];\\r\\n    }\\r\\n\\r\\n    /// @notice `msg.sender` approves `_spender` to send `_amount` tokens on\\r\\n    ///  its behalf, and then a function is triggered in the contract that is\\r\\n    ///  being approved, `_spender`. This allows users to use their tokens to\\r\\n    ///  interact with contracts in one function call instead of two\\r\\n    /// @param _spender The address of the contract able to transfer the tokens\\r\\n    /// @param _amount The amount of tokens to be approved for transfer\\r\\n    /// @return True if the function call was successful\\r\\n    function approveAndCall(ApproveAndCallFallBack _spender, uint256 _amount, bytes _extraData) public returns (bool success) {\\r\\n        require(approve(_spender, _amount));\\r\\n\\r\\n        _spender.receiveApproval(\\r\\n            msg.sender,\\r\\n            _amount,\\r\\n            this,\\r\\n            _extraData\\r\\n        );\\r\\n\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /// @dev This function makes it easy to get the total number of tokens\\r\\n    /// @return The total number of tokens\\r\\n    function totalSupply() public constant returns (uint) {\\r\\n        return totalSupplyAt(block.number);\\r\\n    }\\r\\n\\r\\n\\r\\n////////////////\\r\\n// Query balance and totalSupply in History\\r\\n////////////////\\r\\n\\r\\n    /// @dev Queries the balance of `_owner` at a specific `_blockNumber`\\r\\n    /// @param _owner The address from which the balance will be retrieved\\r\\n    /// @param _blockNumber The block number when the balance is queried\\r\\n    /// @return The balance at `_blockNumber`\\r\\n    function balanceOfAt(address _owner, uint _blockNumber) public constant returns (uint) {\\r\\n\\r\\n        // These next few lines are used when the balance of the token is\\r\\n        //  requested before a check point was ever created for this token, it\\r\\n        //  requires that the `parentToken.balanceOfAt` be queried at the\\r\\n        //  genesis block for that token as this contains initial balance of\\r\\n        //  this token\\r\\n        if ((balances[_owner].length == 0) || (balances[_owner][0].fromBlock > _blockNumber)) {\\r\\n            if (address(parentToken) != 0) {\\r\\n                return parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock));\\r\\n            } else {\\r\\n                // Has no parent\\r\\n                return 0;\\r\\n            }\\r\\n\\r\\n        // This will return the expected balance during normal situations\\r\\n        } else {\\r\\n            return getValueAt(balances[_owner], _blockNumber);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /// @notice Total amount of tokens at a specific `_blockNumber`.\\r\\n    /// @param _blockNumber The block number when the totalSupply is queried\\r\\n    /// @return The total amount of tokens at `_blockNumber`\\r\\n    function totalSupplyAt(uint _blockNumber) public constant returns(uint) {\\r\\n\\r\\n        // These next few lines are used when the totalSupply of the token is\\r\\n        //  requested before a check point was ever created for this token, it\\r\\n        //  requires that the `parentToken.totalSupplyAt` be queried at the\\r\\n        //  genesis block for this token as that contains totalSupply of this\\r\\n        //  token at this block number.\\r\\n        if ((totalSupplyHistory.length == 0) || (totalSupplyHistory[0].fromBlock > _blockNumber)) {\\r\\n            if (address(parentToken) != 0) {\\r\\n                return parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock));\\r\\n            } else {\\r\\n                return 0;\\r\\n            }\\r\\n\\r\\n        // This will return the expected totalSupply during normal situations\\r\\n        } else {\\r\\n            return getValueAt(totalSupplyHistory, _blockNumber);\\r\\n        }\\r\\n    }\\r\\n\\r\\n////////////////\\r\\n// Clone Token Method\\r\\n////////////////\\r\\n\\r\\n    /// @notice Creates a new clone token with the initial distribution being\\r\\n    ///  this token at `_snapshotBlock`\\r\\n    /// @param _cloneTokenName Name of the clone token\\r\\n    /// @param _cloneDecimalUnits Number of decimals of the smallest unit\\r\\n    /// @param _cloneTokenSymbol Symbol of the clone token\\r\\n    /// @param _snapshotBlock Block when the distribution of the parent token is\\r\\n    ///  copied to set the initial distribution of the new clone token;\\r\\n    ///  if the block is zero than the actual block, the current block is used\\r\\n    /// @param _transfersEnabled True if transfers are allowed in the clone\\r\\n    /// @return The address of the new MiniMeToken Contract\\r\\n    function createCloneToken(\\r\\n        string _cloneTokenName,\\r\\n        uint8 _cloneDecimalUnits,\\r\\n        string _cloneTokenSymbol,\\r\\n        uint _snapshotBlock,\\r\\n        bool _transfersEnabled\\r\\n    ) public returns(MiniMeToken)\\r\\n    {\\r\\n        uint256 snapshot = _snapshotBlock == 0 ? block.number - 1 : _snapshotBlock;\\r\\n\\r\\n        MiniMeToken cloneToken = tokenFactory.createCloneToken(\\r\\n            this,\\r\\n            snapshot,\\r\\n            _cloneTokenName,\\r\\n            _cloneDecimalUnits,\\r\\n            _cloneTokenSymbol,\\r\\n            _transfersEnabled\\r\\n        );\\r\\n\\r\\n        cloneToken.changeController(msg.sender);\\r\\n\\r\\n        // An event to make the token easy to find on the blockchain\\r\\n        NewCloneToken(address(cloneToken), snapshot);\\r\\n        return cloneToken;\\r\\n    }\\r\\n\\r\\n////////////////\\r\\n// Generate and destroy tokens\\r\\n////////////////\\r\\n\\r\\n    /// @notice Generates `_amount` tokens that are assigned to `_owner`\\r\\n    /// @param _owner The address that will be assigned the new tokens\\r\\n    /// @param _amount The quantity of tokens generated\\r\\n    /// @return True if the tokens are generated correctly\\r\\n    function generateTokens(address _owner, uint _amount) onlyController public returns (bool) {\\r\\n        uint curTotalSupply = totalSupply();\\r\\n        require(curTotalSupply + _amount >= curTotalSupply); // Check for overflow\\r\\n        uint previousBalanceTo = balanceOf(_owner);\\r\\n        require(previousBalanceTo + _amount >= previousBalanceTo); // Check for overflow\\r\\n        updateValueAtNow(totalSupplyHistory, curTotalSupply + _amount);\\r\\n        updateValueAtNow(balances[_owner], previousBalanceTo + _amount);\\r\\n        Transfer(0, _owner, _amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n\\r\\n    /// @notice Burns `_amount` tokens from `_owner`\\r\\n    /// @param _owner The address that will lose the tokens\\r\\n    /// @param _amount The quantity of tokens to burn\\r\\n    /// @return True if the tokens are burned correctly\\r\\n    function destroyTokens(address _owner, uint _amount) onlyController public returns (bool) {\\r\\n        uint curTotalSupply = totalSupply();\\r\\n        require(curTotalSupply >= _amount);\\r\\n        uint previousBalanceFrom = balanceOf(_owner);\\r\\n        require(previousBalanceFrom >= _amount);\\r\\n        updateValueAtNow(totalSupplyHistory, curTotalSupply - _amount);\\r\\n        updateValueAtNow(balances[_owner], previousBalanceFrom - _amount);\\r\\n        Transfer(_owner, 0, _amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n////////////////\\r\\n// Enable tokens transfers\\r\\n////////////////\\r\\n\\r\\n\\r\\n    /// @notice Enables token holders to transfer their tokens freely if true\\r\\n    /// @param _transfersEnabled True if transfers are allowed in the clone\\r\\n    function enableTransfers(bool _transfersEnabled) onlyController public {\\r\\n        transfersEnabled = _transfersEnabled;\\r\\n    }\\r\\n\\r\\n////////////////\\r\\n// Internal helper functions to query and set a value in a snapshot array\\r\\n////////////////\\r\\n\\r\\n    /// @dev `getValueAt` retrieves the number of tokens at a given block number\\r\\n    /// @param checkpoints The history of values being queried\\r\\n    /// @param _block The block number to retrieve the value at\\r\\n    /// @return The number of tokens being queried\\r\\n    function getValueAt(Checkpoint[] storage checkpoints, uint _block) constant internal returns (uint) {\\r\\n        if (checkpoints.length == 0)\\r\\n            return 0;\\r\\n\\r\\n        // Shortcut for the actual value\\r\\n        if (_block >= checkpoints[checkpoints.length-1].fromBlock)\\r\\n            return checkpoints[checkpoints.length-1].value;\\r\\n        if (_block < checkpoints[0].fromBlock)\\r\\n            return 0;\\r\\n\\r\\n        // Binary search of the value in the array\\r\\n        uint min = 0;\\r\\n        uint max = checkpoints.length-1;\\r\\n        while (max > min) {\\r\\n            uint mid = (max + min + 1) / 2;\\r\\n            if (checkpoints[mid].fromBlock<=_block) {\\r\\n                min = mid;\\r\\n            } else {\\r\\n                max = mid-1;\\r\\n            }\\r\\n        }\\r\\n        return checkpoints[min].value;\\r\\n    }\\r\\n\\r\\n    /// @dev `updateValueAtNow` used to update the `balances` map and the\\r\\n    ///  `totalSupplyHistory`\\r\\n    /// @param checkpoints The history of data being updated\\r\\n    /// @param _value The new number of tokens\\r\\n    function updateValueAtNow(Checkpoint[] storage checkpoints, uint _value) internal {\\r\\n        require(_value <= uint128(-1));\\r\\n\\r\\n        if ((checkpoints.length == 0) || (checkpoints[checkpoints.length - 1].fromBlock < block.number)) {\\r\\n            Checkpoint storage newCheckPoint = checkpoints[checkpoints.length++];\\r\\n            newCheckPoint.fromBlock = uint128(block.number);\\r\\n            newCheckPoint.value = uint128(_value);\\r\\n        } else {\\r\\n            Checkpoint storage oldCheckPoint = checkpoints[checkpoints.length - 1];\\r\\n            oldCheckPoint.value = uint128(_value);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /// @dev Internal function to determine if an address is a contract\\r\\n    /// @param _addr The address being queried\\r\\n    /// @return True if `_addr` is a contract\\r\\n    function isContract(address _addr) constant internal returns(bool) {\\r\\n        uint size;\\r\\n        if (_addr == 0)\\r\\n            return false;\\r\\n\\r\\n        assembly {\\r\\n            size := extcodesize(_addr)\\r\\n        }\\r\\n\\r\\n        return size>0;\\r\\n    }\\r\\n\\r\\n    /// @dev Helper function to return a min betwen the two uints\\r\\n    function min(uint a, uint b) pure internal returns (uint) {\\r\\n        return a < b ? a : b;\\r\\n    }\\r\\n\\r\\n    /// @notice The fallback function: If the contract's controller has not been\\r\\n    ///  set to 0, then the `proxyPayment` method is called which relays the\\r\\n    ///  ether and creates tokens as described in the token controller contract\\r\\n    function () external payable {\\r\\n        require(isContract(controller));\\r\\n        // Adding the ` == true` makes the linter shut up so...\\r\\n        require(ITokenController(controller).proxyPayment.value(msg.value)(msg.sender) == true);\\r\\n    }\\r\\n\\r\\n//////////\\r\\n// Safety Methods\\r\\n//////////\\r\\n\\r\\n    /// @notice This method can be used by the controller to extract mistakenly\\r\\n    ///  sent tokens to this contract.\\r\\n    /// @param _token The address of the token contract that you want to recover\\r\\n    ///  set to 0 in case you want to extract ether.\\r\\n    function claimTokens(address _token) onlyController public {\\r\\n        if (_token == 0x0) {\\r\\n            controller.transfer(this.balance);\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        MiniMeToken token = MiniMeToken(_token);\\r\\n        uint balance = token.balanceOf(this);\\r\\n        token.transfer(controller, balance);\\r\\n        ClaimedTokens(_token, controller, balance);\\r\\n    }\\r\\n\\r\\n////////////////\\r\\n// Events\\r\\n////////////////\\r\\n    event ClaimedTokens(address indexed _token, address indexed _controller, uint _amount);\\r\\n    event Transfer(address indexed _from, address indexed _to, uint256 _amount);\\r\\n    event NewCloneToken(address indexed _cloneToken, uint _snapshotBlock);\\r\\n    event Approval(\\r\\n        address indexed _owner,\\r\\n        address indexed _spender,\\r\\n        uint256 _amount\\r\\n        );\\r\\n\\r\\n}\\r\\n\\r\\n\\r\\n////////////////\\r\\n// MiniMeTokenFactory\\r\\n////////////////\\r\\n\\r\\n/// @dev This contract is used to generate clone contracts from a contract.\\r\\n///  In solidity this is the way to create a contract from a contract of the\\r\\n///  same class\\r\\ncontract MiniMeTokenFactory {\\r\\n    event NewFactoryCloneToken(address indexed _cloneToken, address indexed _parentToken, uint _snapshotBlock);\\r\\n\\r\\n    /// @notice Update the DApp by creating a new token with new functionalities\\r\\n    ///  the msg.sender becomes the controller of this clone token\\r\\n    /// @param _parentToken Address of the token being cloned\\r\\n    /// @param _snapshotBlock Block of the parent token that will\\r\\n    ///  determine the initial distribution of the clone token\\r\\n    /// @param _tokenName Name of the new token\\r\\n    /// @param _decimalUnits Number of decimals of the new token\\r\\n    /// @param _tokenSymbol Token Symbol for the new token\\r\\n    /// @param _transfersEnabled If true, tokens will be able to be transferred\\r\\n    /// @return The address of the new token contract\\r\\n    function createCloneToken(\\r\\n        MiniMeToken _parentToken,\\r\\n        uint _snapshotBlock,\\r\\n        string _tokenName,\\r\\n        uint8 _decimalUnits,\\r\\n        string _tokenSymbol,\\r\\n        bool _transfersEnabled\\r\\n    ) public returns (MiniMeToken)\\r\\n    {\\r\\n        MiniMeToken newToken = new MiniMeToken(\\r\\n            this,\\r\\n            _parentToken,\\r\\n            _snapshotBlock,\\r\\n            _tokenName,\\r\\n            _decimalUnits,\\r\\n            _tokenSymbol,\\r\\n            _transfersEnabled\\r\\n        );\\r\\n\\r\\n        newToken.changeController(msg.sender);\\r\\n        NewFactoryCloneToken(address(newToken), address(_parentToken), _snapshotBlock);\\r\\n        return newToken;\\r\\n    }\\r\\n}\",\"keccak256\":\"0xc1932610896f248af33efbc36ae1ef8b6ab7534f53560b7aaae11c137f17adee\"}},\"version\":1}",
  "bytecode": "0x60c0604052600760808190527f4d4d545f302e310000000000000000000000000000000000000000000000000060a090815262000040916004919062000147565b503480156200004e57600080fd5b5060405162001c0138038062001c018339810160409081528151602080840151928401516060850151608086015160a087015160c088015160008054600160a060020a03191633179055600b8054600160a060020a0389166101000261010060a860020a031990911617905592880180519698949690959294919091019291620000de9160019187019062000147565b506002805460ff191660ff851617905581516200010390600390602085019062000147565b5060058054600160a060020a031916600160a060020a039790971696909617909555505050600655600b805460ff19169115159190911790555043600755620001ec565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200018a57805160ff1916838001178555620001ba565b82800160010185558215620001ba579182015b82811115620001ba5782518255916020019190600101906200019d565b50620001c8929150620001cc565b5090565b620001e991905b80821115620001c85760008155600101620001d3565b90565b611a0580620001fc6000396000f3006080604052600436106101485763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde03811461020b578063095ea7b31461029557806317634514146102cd57806318160ddd146102f457806323b872dd14610309578063313ce567146103335780633cebb8231461035e5780634ee2cd7e1461037f57806354fd4d50146103a35780636638c087146103b857806370a082311461047b57806380a540011461049c578063827f32c0146104b157806395d89b41146104d5578063981b24d0146104ea578063a9059cbb14610502578063bef97c8714610526578063c5bcc4f11461053b578063cae9ca5114610550578063d3ce77fe146105b9578063dd62ed3e146105dd578063df8de3e714610604578063e77772fe14610625578063f41e60c51461063a578063f77c479114610654575b60005461015d90600160a060020a0316610669565b151561016857600080fd5b600054604080517ff48c30540000000000000000000000000000000000000000000000000000000081523360048201529051600160a060020a039092169163f48c3054913491602480830192602092919082900301818588803b1580156101ce57600080fd5b505af11580156101e2573d6000803e3d6000fd5b50505050506040513d60208110156101f957600080fd5b5051151560011461020957600080fd5b005b34801561021757600080fd5b50610220610696565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561025a578181015183820152602001610242565b50505050905090810190601f1680156102875780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156102a157600080fd5b506102b9600160a060020a0360043516602435610723565b604080519115158252519081900360200190f35b3480156102d957600080fd5b506102e26108a4565b60408051918252519081900360200190f35b34801561030057600080fd5b506102e26108aa565b34801561031557600080fd5b506102b9600160a060020a03600435811690602435166044356108bb565b34801561033f57600080fd5b50610348610952565b6040805160ff9092168252519081900360200190f35b34801561036a57600080fd5b50610209600160a060020a036004351661095b565b34801561038b57600080fd5b506102e2600160a060020a03600435166024356109ac565b3480156103af57600080fd5b50610220610b1b565b3480156103c457600080fd5b506040805160206004803580820135601f810184900484028501840190955284845261045f94369492936024939284019190819084018382808284375050604080516020601f818a01358b0180359182018390048302840183018552818452989b60ff8b35169b909a909994019750919550918201935091508190840183828082843750949750508435955050505050602001351515610b76565b60408051600160a060020a039092168252519081900360200190f35b34801561048757600080fd5b506102e2600160a060020a0360043516610ddc565b3480156104a857600080fd5b5061045f610df0565b3480156104bd57600080fd5b506102b9600160a060020a0360043516602435610dff565b3480156104e157600080fd5b50610220610ecb565b3480156104f657600080fd5b506102e2600435610f26565b34801561050e57600080fd5b506102b9600160a060020a036004351660243561103c565b34801561053257600080fd5b506102b961105b565b34801561054757600080fd5b506102e2611064565b34801561055c57600080fd5b50604080516020600460443581810135601f81018490048402850184019095528484526102b9948235600160a060020a031694602480359536959460649492019190819084018382808284375094975061106a9650505050505050565b3480156105c557600080fd5b506102b9600160a060020a0360043516602435611185565b3480156105e957600080fd5b506102e2600160a060020a036004358116906024351661124d565b34801561061057600080fd5b50610209600160a060020a0360043516611278565b34801561063157600080fd5b5061045f61145f565b34801561064657600080fd5b506102096004351515611473565b34801561066057600080fd5b5061045f6114bb565b600080600160a060020a03831615156106855760009150610690565b823b90506000811191505b50919050565b60018054604080516020600284861615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561071b5780601f106106f05761010080835404028352916020019161071b565b820191906000526020600020905b8154815290600101906020018083116106fe57829003601f168201915b505050505081565b600b5460009060ff16151561073757600080fd5b8115806107655750336000908152600960209081526040808320600160a060020a0387168452909152902054155b151561077057600080fd5b60005461078590600160a060020a0316610669565b1561083c5760008054604080517fda682aeb000000000000000000000000000000000000000000000000000000008152336004820152600160a060020a038781166024830152604482018790529151919092169263da682aeb92606480820193602093909283900390910190829087803b15801561080257600080fd5b505af1158015610816573d6000803e3d6000fd5b505050506040513d602081101561082c57600080fd5b5051151560011461083c57600080fd5b336000818152600960209081526040808320600160a060020a03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060015b92915050565b60075481565b60006108b543610f26565b90505b90565b60008054600160a060020a0316331461093d57600b5460ff1615156108df57600080fd5b600160a060020a03841660009081526009602090815260408083203384529091529020548211156109125750600061094b565b600160a060020a03841660009081526009602090815260408083203384529091529020805483900390555b6109488484846114ca565b90505b9392505050565b60025460ff1681565b600054600160a060020a0316331461097257600080fd5b600080547fffffffffffffffffffffffff000000000000000000000000000000000000000016600160a060020a0392909216919091179055565b600160a060020a0382166000908152600860205260408120541580610a115750600160a060020a0383166000908152600860205260408120805484929081106109f157fe5b6000918252602090912001546fffffffffffffffffffffffffffffffff16115b15610af257600554600160a060020a031615610aea57600554600654600160a060020a0390911690634ee2cd7e908590610a4c9086906116bf565b6040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050602060405180830381600087803b158015610ab757600080fd5b505af1158015610acb573d6000803e3d6000fd5b505050506040513d6020811015610ae157600080fd5b5051905061089e565b50600061089e565b600160a060020a0383166000908152600860205260409020610b1490836116d5565b905061089e565b6004805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561071b5780601f106106f05761010080835404028352916020019161071b565b600080808415610b865784610b8b565b600143035b600b546040517f5b7b72c100000000000000000000000000000000000000000000000000000000815230600482018181526024830185905260ff8c16606484015288151560a484015260c0604484019081528d5160c48501528d51959750610100909404600160a060020a031694635b7b72c194929388938f938f938f938e9391608482019160e40190602089019080838360005b83811015610c38578181015183820152602001610c20565b50505050905090810190601f168015610c655780820380516001836020036101000a031916815260200191505b50838103825285518152855160209182019187019080838360005b83811015610c98578181015183820152602001610c80565b50505050905090810190601f168015610cc55780820380516001836020036101000a031916815260200191505b5098505050505050505050602060405180830381600087803b158015610cea57600080fd5b505af1158015610cfe573d6000803e3d6000fd5b505050506040513d6020811015610d1457600080fd5b5051604080517f3cebb8230000000000000000000000000000000000000000000000000000000081523360048201529051919250600160a060020a03831691633cebb8239160248082019260009290919082900301818387803b158015610d7a57600080fd5b505af1158015610d8e573d6000803e3d6000fd5b5050604080518581529051600160a060020a03851693507f086c875b377f900b07ce03575813022f05dd10ed7640b5282cf6d3c3fc352ade92509081900360200190a2979650505050505050565b6000610de882436109ac565b90505b919050565b600554600160a060020a031681565b6000805481908190600160a060020a03163314610e1b57600080fd5b610e236108aa565b9150838201821115610e3457600080fd5b610e3d85610ddc565b9050838101811115610e4e57600080fd5b610e5b600a858401611861565b600160a060020a0385166000908152600860205260409020610e7f90828601611861565b604080518581529051600160a060020a038716916000917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a3506001949350505050565b6003805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561071b5780601f106106f05761010080835404028352916020019161071b565b600a546000901580610f64575081600a6000815481101515610f4457fe5b6000918252602090912001546fffffffffffffffffffffffffffffffff16115b1561102a57600554600160a060020a03161561102257600554600654600160a060020a039091169063981b24d090610f9d9085906116bf565b6040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050602060405180830381600087803b158015610fef57600080fd5b505af1158015611003573d6000803e3d6000fd5b505050506040513d602081101561101957600080fd5b50519050610deb565b506000610deb565b611035600a836116d5565b9050610deb565b600b5460009060ff16151561105057600080fd5b61094b3384846114ca565b600b5460ff1681565b60065481565b60006110768484610723565b151561108157600080fd5b6040517f8f4ffcb10000000000000000000000000000000000000000000000000000000081523360048201818152602483018690523060448401819052608060648501908152865160848601528651600160a060020a038a1695638f4ffcb195948a94938a939192909160a490910190602085019080838360005b838110156111145781810151838201526020016110fc565b50505050905090810190601f1680156111415780820380516001836020036101000a031916815260200191505b5095505050505050600060405180830381600087803b15801561116357600080fd5b505af1158015611177573d6000803e3d6000fd5b506001979650505050505050565b6000805481908190600160a060020a031633146111a157600080fd5b6111a96108aa565b9150838210156111b857600080fd5b6111c185610ddc565b9050838110156111d057600080fd5b6111dd600a858403611861565b600160a060020a038516600090815260086020526040902061120190858303611861565b604080518581529051600091600160a060020a038816917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a3506001949350505050565b600160a060020a03918216600090815260096020908152604080832093909416825291909152205490565b600080548190600160a060020a0316331461129257600080fd5b600160a060020a03831615156112e35760008054604051600160a060020a0390911691303180156108fc02929091818181858888f193505050501580156112dd573d6000803e3d6000fd5b5061145a565b604080517f70a082310000000000000000000000000000000000000000000000000000000081523060048201529051849350600160a060020a038416916370a082319160248083019260209291908290030181600087803b15801561134757600080fd5b505af115801561135b573d6000803e3d6000fd5b505050506040513d602081101561137157600080fd5b505160008054604080517fa9059cbb000000000000000000000000000000000000000000000000000000008152600160a060020a0392831660048201526024810185905290519394509085169263a9059cbb92604480840193602093929083900390910190829087803b1580156113e757600080fd5b505af11580156113fb573d6000803e3d6000fd5b505050506040513d602081101561141157600080fd5b5050600054604080518381529051600160a060020a03928316928616917ff931edb47c50b4b4104c187b5814a9aef5f709e17e2ecf9617e860cacade929c919081900360200190a35b505050565b600b546101009004600160a060020a031681565b600054600160a060020a0316331461148a57600080fd5b600b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055565b600054600160a060020a031681565b600080808315156114de57600192506116b6565b60065443116114ec57600080fd5b600160a060020a0385161580159061150d5750600160a060020a0385163014155b151561151857600080fd5b61152286436109ac565b91508382101561153557600092506116b6565b60005461154a90600160a060020a0316610669565b156116035760008054604080517f4a393149000000000000000000000000000000000000000000000000000000008152600160a060020a038a8116600483015289811660248301526044820189905291519190921692634a39314992606480820193602093909283900390910190829087803b1580156115c957600080fd5b505af11580156115dd573d6000803e3d6000fd5b505050506040513d60208110156115f357600080fd5b5051151560011461160357600080fd5b600160a060020a038616600090815260086020526040902061162790858403611861565b61163185436109ac565b905083810181111561164257600080fd5b600160a060020a038516600090815260086020526040902061166690828601611861565b84600160a060020a031686600160a060020a03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef866040518082815260200191505060405180910390a3600192505b50509392505050565b60008183106116ce578161094b565b5090919050565b6000806000808580549050600014156116f15760009350611858565b85548690600019810190811061170357fe5b6000918252602090912001546fffffffffffffffffffffffffffffffff1685106117725785548690600019810190811061173957fe5b60009182526020909120015470010000000000000000000000000000000090046fffffffffffffffffffffffffffffffff169350611858565b85600081548110151561178157fe5b6000918252602090912001546fffffffffffffffffffffffffffffffff168510156117af5760009350611858565b8554600093506000190191505b828211156118155760026001838501010490508486828154811015156117de57fe5b6000918252602090912001546fffffffffffffffffffffffffffffffff161161180957809250611810565b6001810391505b6117bc565b858381548110151561182357fe5b60009182526020909120015470010000000000000000000000000000000090046fffffffffffffffffffffffffffffffff1693505b50505092915050565b6000806fffffffffffffffffffffffffffffffff83111561188157600080fd5b835415806118be5750835443908590600019810190811061189e57fe5b6000918252602090912001546fffffffffffffffffffffffffffffffff16105b1561194857835484906118d4826001830161199c565b815481106118de57fe5b600091825260209091200180546fffffffffffffffffffffffffffffffff858116700100000000000000000000000000000000024382167fffffffffffffffffffffffffffffffff0000000000000000000000000000000090931692909217161781559150611996565b83548490600019810190811061195a57fe5b600091825260209091200180546fffffffffffffffffffffffffffffffff80861670010000000000000000000000000000000002911617815590505b50505050565b81548183558181111561145a5760008381526020902061145a9181019083016108b891905b808211156119d557600081556001016119c1565b50905600a165627a7a72305820615a27e855dc52395a17b78992e3122b4ea41e38628d6d5d8e0715778014b3270029",
  "deployedBytecode": "0x6080604052600436106101485763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde03811461020b578063095ea7b31461029557806317634514146102cd57806318160ddd146102f457806323b872dd14610309578063313ce567146103335780633cebb8231461035e5780634ee2cd7e1461037f57806354fd4d50146103a35780636638c087146103b857806370a082311461047b57806380a540011461049c578063827f32c0146104b157806395d89b41146104d5578063981b24d0146104ea578063a9059cbb14610502578063bef97c8714610526578063c5bcc4f11461053b578063cae9ca5114610550578063d3ce77fe146105b9578063dd62ed3e146105dd578063df8de3e714610604578063e77772fe14610625578063f41e60c51461063a578063f77c479114610654575b60005461015d90600160a060020a0316610669565b151561016857600080fd5b600054604080517ff48c30540000000000000000000000000000000000000000000000000000000081523360048201529051600160a060020a039092169163f48c3054913491602480830192602092919082900301818588803b1580156101ce57600080fd5b505af11580156101e2573d6000803e3d6000fd5b50505050506040513d60208110156101f957600080fd5b5051151560011461020957600080fd5b005b34801561021757600080fd5b50610220610696565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561025a578181015183820152602001610242565b50505050905090810190601f1680156102875780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156102a157600080fd5b506102b9600160a060020a0360043516602435610723565b604080519115158252519081900360200190f35b3480156102d957600080fd5b506102e26108a4565b60408051918252519081900360200190f35b34801561030057600080fd5b506102e26108aa565b34801561031557600080fd5b506102b9600160a060020a03600435811690602435166044356108bb565b34801561033f57600080fd5b50610348610952565b6040805160ff9092168252519081900360200190f35b34801561036a57600080fd5b50610209600160a060020a036004351661095b565b34801561038b57600080fd5b506102e2600160a060020a03600435166024356109ac565b3480156103af57600080fd5b50610220610b1b565b3480156103c457600080fd5b506040805160206004803580820135601f810184900484028501840190955284845261045f94369492936024939284019190819084018382808284375050604080516020601f818a01358b0180359182018390048302840183018552818452989b60ff8b35169b909a909994019750919550918201935091508190840183828082843750949750508435955050505050602001351515610b76565b60408051600160a060020a039092168252519081900360200190f35b34801561048757600080fd5b506102e2600160a060020a0360043516610ddc565b3480156104a857600080fd5b5061045f610df0565b3480156104bd57600080fd5b506102b9600160a060020a0360043516602435610dff565b3480156104e157600080fd5b50610220610ecb565b3480156104f657600080fd5b506102e2600435610f26565b34801561050e57600080fd5b506102b9600160a060020a036004351660243561103c565b34801561053257600080fd5b506102b961105b565b34801561054757600080fd5b506102e2611064565b34801561055c57600080fd5b50604080516020600460443581810135601f81018490048402850184019095528484526102b9948235600160a060020a031694602480359536959460649492019190819084018382808284375094975061106a9650505050505050565b3480156105c557600080fd5b506102b9600160a060020a0360043516602435611185565b3480156105e957600080fd5b506102e2600160a060020a036004358116906024351661124d565b34801561061057600080fd5b50610209600160a060020a0360043516611278565b34801561063157600080fd5b5061045f61145f565b34801561064657600080fd5b506102096004351515611473565b34801561066057600080fd5b5061045f6114bb565b600080600160a060020a03831615156106855760009150610690565b823b90506000811191505b50919050565b60018054604080516020600284861615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561071b5780601f106106f05761010080835404028352916020019161071b565b820191906000526020600020905b8154815290600101906020018083116106fe57829003601f168201915b505050505081565b600b5460009060ff16151561073757600080fd5b8115806107655750336000908152600960209081526040808320600160a060020a0387168452909152902054155b151561077057600080fd5b60005461078590600160a060020a0316610669565b1561083c5760008054604080517fda682aeb000000000000000000000000000000000000000000000000000000008152336004820152600160a060020a038781166024830152604482018790529151919092169263da682aeb92606480820193602093909283900390910190829087803b15801561080257600080fd5b505af1158015610816573d6000803e3d6000fd5b505050506040513d602081101561082c57600080fd5b5051151560011461083c57600080fd5b336000818152600960209081526040808320600160a060020a03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060015b92915050565b60075481565b60006108b543610f26565b90505b90565b60008054600160a060020a0316331461093d57600b5460ff1615156108df57600080fd5b600160a060020a03841660009081526009602090815260408083203384529091529020548211156109125750600061094b565b600160a060020a03841660009081526009602090815260408083203384529091529020805483900390555b6109488484846114ca565b90505b9392505050565b60025460ff1681565b600054600160a060020a0316331461097257600080fd5b600080547fffffffffffffffffffffffff000000000000000000000000000000000000000016600160a060020a0392909216919091179055565b600160a060020a0382166000908152600860205260408120541580610a115750600160a060020a0383166000908152600860205260408120805484929081106109f157fe5b6000918252602090912001546fffffffffffffffffffffffffffffffff16115b15610af257600554600160a060020a031615610aea57600554600654600160a060020a0390911690634ee2cd7e908590610a4c9086906116bf565b6040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050602060405180830381600087803b158015610ab757600080fd5b505af1158015610acb573d6000803e3d6000fd5b505050506040513d6020811015610ae157600080fd5b5051905061089e565b50600061089e565b600160a060020a0383166000908152600860205260409020610b1490836116d5565b905061089e565b6004805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561071b5780601f106106f05761010080835404028352916020019161071b565b600080808415610b865784610b8b565b600143035b600b546040517f5b7b72c100000000000000000000000000000000000000000000000000000000815230600482018181526024830185905260ff8c16606484015288151560a484015260c0604484019081528d5160c48501528d51959750610100909404600160a060020a031694635b7b72c194929388938f938f938f938e9391608482019160e40190602089019080838360005b83811015610c38578181015183820152602001610c20565b50505050905090810190601f168015610c655780820380516001836020036101000a031916815260200191505b50838103825285518152855160209182019187019080838360005b83811015610c98578181015183820152602001610c80565b50505050905090810190601f168015610cc55780820380516001836020036101000a031916815260200191505b5098505050505050505050602060405180830381600087803b158015610cea57600080fd5b505af1158015610cfe573d6000803e3d6000fd5b505050506040513d6020811015610d1457600080fd5b5051604080517f3cebb8230000000000000000000000000000000000000000000000000000000081523360048201529051919250600160a060020a03831691633cebb8239160248082019260009290919082900301818387803b158015610d7a57600080fd5b505af1158015610d8e573d6000803e3d6000fd5b5050604080518581529051600160a060020a03851693507f086c875b377f900b07ce03575813022f05dd10ed7640b5282cf6d3c3fc352ade92509081900360200190a2979650505050505050565b6000610de882436109ac565b90505b919050565b600554600160a060020a031681565b6000805481908190600160a060020a03163314610e1b57600080fd5b610e236108aa565b9150838201821115610e3457600080fd5b610e3d85610ddc565b9050838101811115610e4e57600080fd5b610e5b600a858401611861565b600160a060020a0385166000908152600860205260409020610e7f90828601611861565b604080518581529051600160a060020a038716916000917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a3506001949350505050565b6003805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561071b5780601f106106f05761010080835404028352916020019161071b565b600a546000901580610f64575081600a6000815481101515610f4457fe5b6000918252602090912001546fffffffffffffffffffffffffffffffff16115b1561102a57600554600160a060020a03161561102257600554600654600160a060020a039091169063981b24d090610f9d9085906116bf565b6040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050602060405180830381600087803b158015610fef57600080fd5b505af1158015611003573d6000803e3d6000fd5b505050506040513d602081101561101957600080fd5b50519050610deb565b506000610deb565b611035600a836116d5565b9050610deb565b600b5460009060ff16151561105057600080fd5b61094b3384846114ca565b600b5460ff1681565b60065481565b60006110768484610723565b151561108157600080fd5b6040517f8f4ffcb10000000000000000000000000000000000000000000000000000000081523360048201818152602483018690523060448401819052608060648501908152865160848601528651600160a060020a038a1695638f4ffcb195948a94938a939192909160a490910190602085019080838360005b838110156111145781810151838201526020016110fc565b50505050905090810190601f1680156111415780820380516001836020036101000a031916815260200191505b5095505050505050600060405180830381600087803b15801561116357600080fd5b505af1158015611177573d6000803e3d6000fd5b506001979650505050505050565b6000805481908190600160a060020a031633146111a157600080fd5b6111a96108aa565b9150838210156111b857600080fd5b6111c185610ddc565b9050838110156111d057600080fd5b6111dd600a858403611861565b600160a060020a038516600090815260086020526040902061120190858303611861565b604080518581529051600091600160a060020a038816917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a3506001949350505050565b600160a060020a03918216600090815260096020908152604080832093909416825291909152205490565b600080548190600160a060020a0316331461129257600080fd5b600160a060020a03831615156112e35760008054604051600160a060020a0390911691303180156108fc02929091818181858888f193505050501580156112dd573d6000803e3d6000fd5b5061145a565b604080517f70a082310000000000000000000000000000000000000000000000000000000081523060048201529051849350600160a060020a038416916370a082319160248083019260209291908290030181600087803b15801561134757600080fd5b505af115801561135b573d6000803e3d6000fd5b505050506040513d602081101561137157600080fd5b505160008054604080517fa9059cbb000000000000000000000000000000000000000000000000000000008152600160a060020a0392831660048201526024810185905290519394509085169263a9059cbb92604480840193602093929083900390910190829087803b1580156113e757600080fd5b505af11580156113fb573d6000803e3d6000fd5b505050506040513d602081101561141157600080fd5b5050600054604080518381529051600160a060020a03928316928616917ff931edb47c50b4b4104c187b5814a9aef5f709e17e2ecf9617e860cacade929c919081900360200190a35b505050565b600b546101009004600160a060020a031681565b600054600160a060020a0316331461148a57600080fd5b600b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055565b600054600160a060020a031681565b600080808315156114de57600192506116b6565b60065443116114ec57600080fd5b600160a060020a0385161580159061150d5750600160a060020a0385163014155b151561151857600080fd5b61152286436109ac565b91508382101561153557600092506116b6565b60005461154a90600160a060020a0316610669565b156116035760008054604080517f4a393149000000000000000000000000000000000000000000000000000000008152600160a060020a038a8116600483015289811660248301526044820189905291519190921692634a39314992606480820193602093909283900390910190829087803b1580156115c957600080fd5b505af11580156115dd573d6000803e3d6000fd5b505050506040513d60208110156115f357600080fd5b5051151560011461160357600080fd5b600160a060020a038616600090815260086020526040902061162790858403611861565b61163185436109ac565b905083810181111561164257600080fd5b600160a060020a038516600090815260086020526040902061166690828601611861565b84600160a060020a031686600160a060020a03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef866040518082815260200191505060405180910390a3600192505b50509392505050565b60008183106116ce578161094b565b5090919050565b6000806000808580549050600014156116f15760009350611858565b85548690600019810190811061170357fe5b6000918252602090912001546fffffffffffffffffffffffffffffffff1685106117725785548690600019810190811061173957fe5b60009182526020909120015470010000000000000000000000000000000090046fffffffffffffffffffffffffffffffff169350611858565b85600081548110151561178157fe5b6000918252602090912001546fffffffffffffffffffffffffffffffff168510156117af5760009350611858565b8554600093506000190191505b828211156118155760026001838501010490508486828154811015156117de57fe5b6000918252602090912001546fffffffffffffffffffffffffffffffff161161180957809250611810565b6001810391505b6117bc565b858381548110151561182357fe5b60009182526020909120015470010000000000000000000000000000000090046fffffffffffffffffffffffffffffffff1693505b50505092915050565b6000806fffffffffffffffffffffffffffffffff83111561188157600080fd5b835415806118be5750835443908590600019810190811061189e57fe5b6000918252602090912001546fffffffffffffffffffffffffffffffff16105b1561194857835484906118d4826001830161199c565b815481106118de57fe5b600091825260209091200180546fffffffffffffffffffffffffffffffff858116700100000000000000000000000000000000024382167fffffffffffffffffffffffffffffffff0000000000000000000000000000000090931692909217161781559150611996565b83548490600019810190811061195a57fe5b600091825260209091200180546fffffffffffffffffffffffffffffffff80861670010000000000000000000000000000000002911617815590505b50505050565b81548183558181111561145a5760008381526020902061145a9181019083016108b891905b808211156119d557600081556001016119c1565b50905600a165627a7a72305820615a27e855dc52395a17b78992e3122b4ea41e38628d6d5d8e0715778014b3270029",
  "devdoc": {
    "methods": {
      "allowance(address,address)": {
        "details": "This function makes it easy to read the `allowed[]` map\r",
        "params": {
          "_owner": "The address of the account that owns the token\r",
          "_spender": "The address of the account able to transfer the tokens\r"
        },
        "return": "Amount of remaining tokens of _owner that _spender is allowed\r  to spend\r"
      },
      "approve(address,uint256)": {
        "params": {
          "_amount": "The amount of tokens to be approved for transfer\r",
          "_spender": "The address of the account able to transfer the tokens\r"
        },
        "return": "True if the approval was successful\r"
      },
      "approveAndCall(address,uint256,bytes)": {
        "params": {
          "_amount": "The amount of tokens to be approved for transfer\r",
          "_spender": "The address of the contract able to transfer the tokens\r"
        },
        "return": "True if the function call was successful\r"
      },
      "balanceOf(address)": {
        "params": {
          "_owner": "The address that's balance is being requested\r"
        },
        "return": "The balance of `_owner` at the current block\r"
      },
      "balanceOfAt(address,uint256)": {
        "details": "Queries the balance of `_owner` at a specific `_blockNumber`\r",
        "params": {
          "_blockNumber": "The block number when the balance is queried\r",
          "_owner": "The address from which the balance will be retrieved\r"
        },
        "return": "The balance at `_blockNumber`\r"
      },
      "changeController(address)": {
        "params": {
          "_newController": "The new controller of the contract\r"
        }
      },
      "claimTokens(address)": {
        "params": {
          "_token": "The address of the token contract that you want to recover\r  set to 0 in case you want to extract ether.\r"
        }
      },
      "createCloneToken(string,uint8,string,uint256,bool)": {
        "params": {
          "_cloneDecimalUnits": "Number of decimals of the smallest unit\r",
          "_cloneTokenName": "Name of the clone token\r",
          "_cloneTokenSymbol": "Symbol of the clone token\r",
          "_snapshotBlock": "Block when the distribution of the parent token is\r  copied to set the initial distribution of the new clone token;\r  if the block is zero than the actual block, the current block is used\r",
          "_transfersEnabled": "True if transfers are allowed in the clone\r"
        },
        "return": "The address of the new MiniMeToken Contract\r"
      },
      "destroyTokens(address,uint256)": {
        "params": {
          "_amount": "The quantity of tokens to burn\r",
          "_owner": "The address that will lose the tokens\r"
        },
        "return": "True if the tokens are burned correctly\r"
      },
      "enableTransfers(bool)": {
        "params": {
          "_transfersEnabled": "True if transfers are allowed in the clone\r"
        }
      },
      "generateTokens(address,uint256)": {
        "params": {
          "_amount": "The quantity of tokens generated\r",
          "_owner": "The address that will be assigned the new tokens\r"
        },
        "return": "True if the tokens are generated correctly\r"
      },
      "totalSupply()": {
        "details": "This function makes it easy to get the total number of tokens\r",
        "return": "The total number of tokens\r"
      },
      "totalSupplyAt(uint256)": {
        "params": {
          "_blockNumber": "The block number when the totalSupply is queried\r"
        },
        "return": "The total amount of tokens at `_blockNumber`\r"
      },
      "transfer(address,uint256)": {
        "params": {
          "_amount": "The amount of tokens to be transferred\r",
          "_to": "The address of the recipient\r"
        },
        "return": "Whether the transfer was successful or not\r"
      },
      "transferFrom(address,address,uint256)": {
        "params": {
          "_amount": "The amount of tokens to be transferred\r",
          "_from": "The address holding the tokens being transferred\r",
          "_to": "The address of the recipient\r"
        },
        "return": "True if the transfer was successful\r"
      }
    }
  },
  "userdoc": {
    "methods": {
      "approve(address,uint256)": {
        "notice": "`msg.sender` approves `_spender` to spend `_amount` tokens on\r  its behalf. This is a modified version of the ERC20 approve function\r  to be a little bit safer\r"
      },
      "approveAndCall(address,uint256,bytes)": {
        "notice": "`msg.sender` approves `_spender` to send `_amount` tokens on\r  its behalf, and then a function is triggered in the contract that is\r  being approved, `_spender`. This allows users to use their tokens to\r  interact with contracts in one function call instead of two\r"
      },
      "balanceOfAt(address,uint256)": {
        "notice": "/////////////\r"
      },
      "changeController(address)": {
        "notice": "Changes the controller of the contract\r"
      },
      "claimTokens(address)": {
        "notice": "///////\rThis method can be used by the controller to extract mistakenly\r  sent tokens to this contract.\r"
      },
      "createCloneToken(string,uint8,string,uint256,bool)": {
        "notice": "/////////////\rCreates a new clone token with the initial distribution being\r  this token at `_snapshotBlock`\r"
      },
      "destroyTokens(address,uint256)": {
        "notice": "Burns `_amount` tokens from `_owner`\r"
      },
      "enableTransfers(bool)": {
        "notice": "/////////////\rEnables token holders to transfer their tokens freely if true\r"
      },
      "generateTokens(address,uint256)": {
        "notice": "/////////////\rGenerates `_amount` tokens that are assigned to `_owner`\r"
      },
      "totalSupplyAt(uint256)": {
        "notice": "Total amount of tokens at a specific `_blockNumber`.\r"
      },
      "transfer(address,uint256)": {
        "notice": "////////////////\rSend `_amount` tokens to `_to` from `msg.sender`\r"
      },
      "transferFrom(address,address,uint256)": {
        "notice": "Send `_amount` tokens to `_to` from `_from` on the condition it\r  is approved by `_from`\r"
      }
    }
  }
}